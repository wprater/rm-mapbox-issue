<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='ARG_list' type='{ARG_list=&quot;next&quot;^{ARG_list}&quot;used&quot;c&quot;param&quot;[1c]}'>
<field declared_type='struct ARG_list*' name='next' type='^{ARG_list=^{ARG_list}c[1c]}'/>
<field declared_type='char' name='used' type='c'/>
<field declared_type='char*' name='param' type='[1c]'/>
</struct>
<struct name='COMPLEX' type='{_COMPLEX=&quot;r&quot;d&quot;i&quot;d}'>
<field declared_type='double' name='r' type='d'/>
<field declared_type='double' name='i' type='d'/>
</struct>
<struct name='CTABLE' type='{CTABLE=&quot;id&quot;[80c]&quot;ll&quot;{_projUV=&quot;u&quot;d&quot;v&quot;d}&quot;del&quot;{_projUV=&quot;u&quot;d&quot;v&quot;d}&quot;lim&quot;{_ILP=&quot;lam&quot;i&quot;phi&quot;i}&quot;cvs&quot;^{_FLP=&quot;lam&quot;f&quot;phi&quot;f}}'>
<field declared_type='char*' name='id' type='[80c]'/>
<field declared_type='projUV' name='ll' type='{_projUV=&quot;u&quot;d&quot;v&quot;d}'/>
<field declared_type='projUV' name='del' type='{_projUV=&quot;u&quot;d&quot;v&quot;d}'/>
<field declared_type='ILP' name='lim' type='{_ILP=&quot;lam&quot;i&quot;phi&quot;i}'/>
<field declared_type='FLP*' name='cvs' type='^{_FLP=&quot;lam&quot;f&quot;phi&quot;f}'/>
</struct>
<struct name='DERIVS' type='{DERIVS=&quot;x_l&quot;d&quot;x_p&quot;d&quot;y_l&quot;d&quot;y_p&quot;d}'>
<field declared_type='double' name='x_l' type='d'/>
<field declared_type='double' name='x_p' type='d'/>
<field declared_type='double' name='y_l' type='d'/>
<field declared_type='double' name='y_p' type='d'/>
</struct>
<struct name='EMESS' type='{EMESS=&quot;File_name&quot;*&quot;Prog_name&quot;*&quot;File_line&quot;i}'>
<field declared_type='char*' name='File_name' type='*'/>
<field declared_type='char*' name='Prog_name' type='*'/>
<field declared_type='int' name='File_line' type='i'/>
</struct>
<struct name='FACTORS' type='{FACTORS=&quot;der&quot;{DERIVS=&quot;x_l&quot;d&quot;x_p&quot;d&quot;y_l&quot;d&quot;y_p&quot;d}&quot;h&quot;d&quot;k&quot;d&quot;omega&quot;d&quot;thetap&quot;d&quot;conv&quot;d&quot;s&quot;d&quot;a&quot;d&quot;b&quot;d&quot;code&quot;i}'>
<field declared_type='struct DERIVS' name='der' type='{DERIVS=&quot;x_l&quot;d&quot;x_p&quot;d&quot;y_l&quot;d&quot;y_p&quot;d}'/>
<field declared_type='double' name='h' type='d'/>
<field declared_type='double' name='k' type='d'/>
<field declared_type='double' name='omega' type='d'/>
<field declared_type='double' name='thetap' type='d'/>
<field declared_type='double' name='conv' type='d'/>
<field declared_type='double' name='s' type='d'/>
<field declared_type='double' name='a' type='d'/>
<field declared_type='double' name='b' type='d'/>
<field declared_type='int' name='code' type='i'/>
</struct>
<struct name='FLP' type='{_FLP=&quot;lam&quot;f&quot;phi&quot;f}'>
<field declared_type='float' name='lam' type='f'/>
<field declared_type='float' name='phi' type='f'/>
</struct>
<struct name='GRMustacheVersion' type='{_GRMustacheVersion=&quot;major&quot;i&quot;minor&quot;i&quot;patch&quot;i}'>
<field declared_type='int' name='major' type='i'/>
<field declared_type='int' name='minor' type='i'/>
<field declared_type='int' name='patch' type='i'/>
</struct>
<struct name='GeocentricInfo' type='{_GeocentricInfo=&quot;Geocent_a&quot;d&quot;Geocent_b&quot;d&quot;Geocent_a2&quot;d&quot;Geocent_b2&quot;d&quot;Geocent_e2&quot;d&quot;Geocent_ep2&quot;d}'>
<field declared_type='double' name='Geocent_a' type='d'/>
<field declared_type='double' name='Geocent_b' type='d'/>
<field declared_type='double' name='Geocent_a2' type='d'/>
<field declared_type='double' name='Geocent_b2' type='d'/>
<field declared_type='double' name='Geocent_e2' type='d'/>
<field declared_type='double' name='Geocent_ep2' type='d'/>
</struct>
<struct name='ILP' type='{_ILP=&quot;lam&quot;i&quot;phi&quot;i}'>
<field declared_type='int' name='lam' type='i'/>
<field declared_type='int' name='phi' type='i'/>
</struct>
<struct name='PJ' type='{PJconsts=&quot;fwd&quot;^?&quot;inv&quot;^?&quot;spc&quot;^?&quot;pfree&quot;^?&quot;descr&quot;*&quot;params&quot;^{ARG_list}&quot;over&quot;i&quot;geoc&quot;i&quot;is_latlong&quot;i&quot;is_geocent&quot;i&quot;a&quot;d&quot;a_orig&quot;d&quot;es&quot;d&quot;es_orig&quot;d&quot;e&quot;d&quot;ra&quot;d&quot;one_es&quot;d&quot;rone_es&quot;d&quot;lam0&quot;d&quot;phi0&quot;d&quot;x0&quot;d&quot;y0&quot;d&quot;k0&quot;d&quot;to_meter&quot;d&quot;fr_meter&quot;d&quot;datum_type&quot;i&quot;datum_params&quot;[7d]&quot;from_greenwich&quot;d&quot;long_wrap_center&quot;d}'>
<field declared_type='projUV (*)(projUV, struct PJconsts *)' function_pointer='true' name='fwd' type='^?'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='struct PJconsts*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</field>
<field declared_type='projUV (*)(projUV, struct PJconsts *)' function_pointer='true' name='inv' type='^?'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='struct PJconsts*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</field>
<field declared_type='void (*)(projUV, struct PJconsts *, struct FACTORS *)' function_pointer='true' name='spc' type='^?'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='struct PJconsts*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<arg declared_type='struct FACTORS*' type='^{FACTORS={DERIVS=dddd}ddddddddi}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(struct PJconsts *)' function_pointer='true' name='pfree' type='^?'>
<arg declared_type='struct PJconsts*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<retval declared_type='void' type='v'/>
</field>
<field const='true' declared_type='char*' name='descr' type='*'/>
<field declared_type='paralist*' name='params' type='^{ARG_list=^{ARG_list}c[1c]}'/>
<field declared_type='int' name='over' type='i'/>
<field declared_type='int' name='geoc' type='i'/>
<field declared_type='int' name='is_latlong' type='i'/>
<field declared_type='int' name='is_geocent' type='i'/>
<field declared_type='double' name='a' type='d'/>
<field declared_type='double' name='a_orig' type='d'/>
<field declared_type='double' name='es' type='d'/>
<field declared_type='double' name='es_orig' type='d'/>
<field declared_type='double' name='e' type='d'/>
<field declared_type='double' name='ra' type='d'/>
<field declared_type='double' name='one_es' type='d'/>
<field declared_type='double' name='rone_es' type='d'/>
<field declared_type='double' name='lam0' type='d'/>
<field declared_type='double' name='phi0' type='d'/>
<field declared_type='double' name='x0' type='d'/>
<field declared_type='double' name='y0' type='d'/>
<field declared_type='double' name='k0' type='d'/>
<field declared_type='double' name='to_meter' type='d'/>
<field declared_type='double' name='fr_meter' type='d'/>
<field declared_type='int' name='datum_type' type='i'/>
<field declared_type='double*' name='datum_params' type='[7d]'/>
<field declared_type='double' name='from_greenwich' type='d'/>
<field declared_type='double' name='long_wrap_center' type='d'/>
</struct>
<struct name='PJ_DATUMS' type='{PJ_DATUMS=&quot;id&quot;*&quot;defn&quot;*&quot;ellipse_id&quot;*&quot;comments&quot;*}'>
<field declared_type='char*' name='id' type='*'/>
<field declared_type='char*' name='defn' type='*'/>
<field declared_type='char*' name='ellipse_id' type='*'/>
<field declared_type='char*' name='comments' type='*'/>
</struct>
<struct name='PJ_ELLPS' type='{PJ_ELLPS=&quot;id&quot;*&quot;major&quot;*&quot;ell&quot;*&quot;name&quot;*}'>
<field declared_type='char*' name='id' type='*'/>
<field declared_type='char*' name='major' type='*'/>
<field declared_type='char*' name='ell' type='*'/>
<field declared_type='char*' name='name' type='*'/>
</struct>
<struct name='PJ_GRIDINFO' type='{_pj_gi=&quot;gridname&quot;*&quot;filename&quot;*&quot;format&quot;*&quot;grid_offset&quot;i&quot;ct&quot;^{CTABLE}&quot;next&quot;^{_pj_gi}&quot;child&quot;^{_pj_gi}}'>
<field declared_type='char*' name='gridname' type='*'/>
<field declared_type='char*' name='filename' type='*'/>
<field const='true' declared_type='char*' name='format' type='*'/>
<field declared_type='int' name='grid_offset' type='i'/>
<field declared_type='struct CTABLE*' name='ct' type='^{CTABLE=[80c]{?=dd}{?=dd}{?=ii}^{?}}'/>
<field declared_type='struct _pj_gi*' name='next' type='^{_pj_gi=***i^{CTABLE}^{_pj_gi}^{_pj_gi}}'/>
<field declared_type='struct _pj_gi*' name='child' type='^{_pj_gi=***i^{CTABLE}^{_pj_gi}^{_pj_gi}}'/>
</struct>
<struct name='PJ_LIST' type='{PJ_LIST=&quot;id&quot;*&quot;proj&quot;^?&quot;descr&quot;^*}'>
<field declared_type='char*' name='id' type='*'/>
<field declared_type='struct PJconsts *(*)(struct PJconsts *)' function_pointer='true' name='proj' type='^?'>
<arg declared_type='struct PJconsts*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<retval declared_type='struct PJconsts*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
</field>
<field const='true' declared_type='char **' name='descr' type='^*'/>
</struct>
<struct name='PJ_PRIME_MERIDIANS' type='{PJ_PRIME_MERIDIANS=&quot;id&quot;*&quot;defn&quot;*}'>
<field declared_type='char*' name='id' type='*'/>
<field declared_type='char*' name='defn' type='*'/>
</struct>
<struct name='PJ_UNITS' type='{PJ_UNITS=&quot;id&quot;*&quot;to_meter&quot;*&quot;name&quot;*}'>
<field declared_type='char*' name='id' type='*'/>
<field declared_type='char*' name='to_meter' type='*'/>
<field declared_type='char*' name='name' type='*'/>
</struct>
<struct name='PJconsts' type='{PJconsts=&quot;fwd&quot;^?&quot;inv&quot;^?&quot;spc&quot;^?&quot;pfree&quot;^?&quot;descr&quot;*&quot;params&quot;^{ARG_list}&quot;over&quot;i&quot;geoc&quot;i&quot;is_latlong&quot;i&quot;is_geocent&quot;i&quot;a&quot;d&quot;a_orig&quot;d&quot;es&quot;d&quot;es_orig&quot;d&quot;e&quot;d&quot;ra&quot;d&quot;one_es&quot;d&quot;rone_es&quot;d&quot;lam0&quot;d&quot;phi0&quot;d&quot;x0&quot;d&quot;y0&quot;d&quot;k0&quot;d&quot;to_meter&quot;d&quot;fr_meter&quot;d&quot;datum_type&quot;i&quot;datum_params&quot;[7d]&quot;from_greenwich&quot;d&quot;long_wrap_center&quot;d}'>
<field declared_type='projUV (*)(projUV, struct PJconsts *)' function_pointer='true' name='fwd' type='^?'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='struct PJconsts*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</field>
<field declared_type='projUV (*)(projUV, struct PJconsts *)' function_pointer='true' name='inv' type='^?'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='struct PJconsts*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</field>
<field declared_type='void (*)(projUV, struct PJconsts *, struct FACTORS *)' function_pointer='true' name='spc' type='^?'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='struct PJconsts*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<arg declared_type='struct FACTORS*' type='^{FACTORS={DERIVS=dddd}ddddddddi}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(struct PJconsts *)' function_pointer='true' name='pfree' type='^?'>
<arg declared_type='struct PJconsts*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<retval declared_type='void' type='v'/>
</field>
<field const='true' declared_type='char*' name='descr' type='*'/>
<field declared_type='paralist*' name='params' type='^{ARG_list=^{ARG_list}c[1c]}'/>
<field declared_type='int' name='over' type='i'/>
<field declared_type='int' name='geoc' type='i'/>
<field declared_type='int' name='is_latlong' type='i'/>
<field declared_type='int' name='is_geocent' type='i'/>
<field declared_type='double' name='a' type='d'/>
<field declared_type='double' name='a_orig' type='d'/>
<field declared_type='double' name='es' type='d'/>
<field declared_type='double' name='es_orig' type='d'/>
<field declared_type='double' name='e' type='d'/>
<field declared_type='double' name='ra' type='d'/>
<field declared_type='double' name='one_es' type='d'/>
<field declared_type='double' name='rone_es' type='d'/>
<field declared_type='double' name='lam0' type='d'/>
<field declared_type='double' name='phi0' type='d'/>
<field declared_type='double' name='x0' type='d'/>
<field declared_type='double' name='y0' type='d'/>
<field declared_type='double' name='k0' type='d'/>
<field declared_type='double' name='to_meter' type='d'/>
<field declared_type='double' name='fr_meter' type='d'/>
<field declared_type='int' name='datum_type' type='i'/>
<field declared_type='double*' name='datum_params' type='[7d]'/>
<field declared_type='double' name='from_greenwich' type='d'/>
<field declared_type='double' name='long_wrap_center' type='d'/>
</struct>
<struct name='PW_COEF' type='{PW_COEF=&quot;m&quot;i&quot;c&quot;^d}'>
<field declared_type='int' name='m' type='i'/>
<field declared_type='double*' name='c' type='^d'/>
</struct>
<struct name='RMProjectedPoint' type='{_RMProjectedPoint=&quot;x&quot;d&quot;y&quot;d}'>
<field declared_type='double' name='x' type='d'/>
<field declared_type='double' name='y' type='d'/>
</struct>
<struct name='RMProjectedRect' type='{_RMProjectedRect=&quot;origin&quot;{_RMProjectedPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{_RMProjectedSize=&quot;width&quot;d&quot;height&quot;d}}'>
<field declared_type='RMProjectedPoint' name='origin' type='{_RMProjectedPoint=&quot;x&quot;d&quot;y&quot;d}'/>
<field declared_type='RMProjectedSize' name='size' type='{_RMProjectedSize=&quot;width&quot;d&quot;height&quot;d}'/>
</struct>
<struct name='RMProjectedSize' type='{_RMProjectedSize=&quot;width&quot;d&quot;height&quot;d}'>
<field declared_type='double' name='width' type='d'/>
<field declared_type='double' name='height' type='d'/>
</struct>
<struct name='RMSphericalTrapezium' type='{_RMSphericalTrapezium=&quot;southWest&quot;{?=&quot;latitude&quot;d&quot;longitude&quot;d}&quot;northEast&quot;{?=&quot;latitude&quot;d&quot;longitude&quot;d}}'>
<field declared_type='CLLocationCoordinate2D' name='southWest' type='{_CLLocationCoordinate2D=&quot;latitude&quot;d&quot;longitude&quot;d}'/>
<field declared_type='CLLocationCoordinate2D' name='northEast' type='{_CLLocationCoordinate2D=&quot;latitude&quot;d&quot;longitude&quot;d}'/>
</struct>
<struct name='RMTile' type='{_RMTile=&quot;x&quot;I&quot;y&quot;I&quot;zoom&quot;s}'>
<field declared_type='uint32_t' name='x' type='I'/>
<field declared_type='uint32_t' name='y' type='I'/>
<field declared_type='short' name='zoom' type='s'/>
</struct>
<struct name='RMTilePoint' type='{_RMTilePoint=&quot;tile&quot;{_RMTile=&quot;x&quot;I&quot;y&quot;I&quot;zoom&quot;s}&quot;offset&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}}' type64='{_RMTilePoint=&quot;tile&quot;{_RMTile=&quot;x&quot;I&quot;y&quot;I&quot;zoom&quot;s}&quot;offset&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}}'>
<field declared_type='RMTile' name='tile' type='{_RMTile=&quot;x&quot;I&quot;y&quot;I&quot;zoom&quot;s}'/>
<field declared_type='CGPoint' name='offset' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}'/>
</struct>
<struct name='RMTileRect' type='{_RMTileRect=&quot;origin&quot;{_RMTilePoint=&quot;tile&quot;{_RMTile=&quot;x&quot;I&quot;y&quot;I&quot;zoom&quot;s}&quot;offset&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}}&quot;size&quot;{CGSize=&quot;width&quot;f&quot;height&quot;f}}' type64='{_RMTileRect=&quot;origin&quot;{_RMTilePoint=&quot;tile&quot;{_RMTile=&quot;x&quot;I&quot;y&quot;I&quot;zoom&quot;s}&quot;offset&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}'>
<field declared_type='RMTilePoint' name='origin' type='{_RMTilePoint=&quot;tile&quot;{_RMTile=&quot;x&quot;I&quot;y&quot;I&quot;zoom&quot;s}&quot;offset&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}}' type64='{_RMTilePoint=&quot;tile&quot;{_RMTile=&quot;x&quot;I&quot;y&quot;I&quot;zoom&quot;s}&quot;offset&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}}'/>
<field declared_type='CGSize' name='size' type='{CGSize=&quot;width&quot;f&quot;height&quot;f}' type64='{CGSize=&quot;width&quot;d&quot;height&quot;d}'/>
</struct>
<struct name='Tseries' type='{_Tseries=&quot;a&quot;{_projUV=&quot;u&quot;d&quot;v&quot;d}&quot;b&quot;{_projUV=&quot;u&quot;d&quot;v&quot;d}&quot;cu&quot;^{PW_COEF}&quot;cv&quot;^{PW_COEF}&quot;mu&quot;i&quot;mv&quot;i&quot;power&quot;i}'>
<field declared_type='projUV' name='a' type='{_projUV=&quot;u&quot;d&quot;v&quot;d}'/>
<field declared_type='projUV' name='b' type='{_projUV=&quot;u&quot;d&quot;v&quot;d}'/>
<field declared_type='struct PW_COEF*' name='cu' type='^{PW_COEF=i^d}'/>
<field declared_type='struct PW_COEF*' name='cv' type='^{PW_COEF=i^d}'/>
<field declared_type='int' name='mu' type='i'/>
<field declared_type='int' name='mv' type='i'/>
<field declared_type='int' name='power' type='i'/>
</struct>
<struct name='geodesic' type='{geodesic=&quot;A&quot;d&quot;LAM1&quot;d&quot;PHI1&quot;d&quot;ALPHA12&quot;d&quot;LAM2&quot;d&quot;PHI2&quot;d&quot;ALPHA21&quot;d&quot;DIST&quot;d&quot;ONEF&quot;d&quot;FLAT&quot;d&quot;FLAT2&quot;d&quot;FLAT4&quot;d&quot;FLAT64&quot;d&quot;ELLIPSE&quot;i}'>
<field declared_type='double' name='A' type='d'/>
<field declared_type='double' name='LAM1' type='d'/>
<field declared_type='double' name='PHI1' type='d'/>
<field declared_type='double' name='ALPHA12' type='d'/>
<field declared_type='double' name='LAM2' type='d'/>
<field declared_type='double' name='PHI2' type='d'/>
<field declared_type='double' name='ALPHA21' type='d'/>
<field declared_type='double' name='DIST' type='d'/>
<field declared_type='double' name='ONEF' type='d'/>
<field declared_type='double' name='FLAT' type='d'/>
<field declared_type='double' name='FLAT2' type='d'/>
<field declared_type='double' name='FLAT4' type='d'/>
<field declared_type='double' name='FLAT64' type='d'/>
<field declared_type='int' name='ELLIPSE' type='i'/>
</struct>
<struct name='paralist' type='{ARG_list=&quot;next&quot;^{ARG_list}&quot;used&quot;c&quot;param&quot;[1c]}'>
<field declared_type='struct ARG_list*' name='next' type='^{ARG_list=^{ARG_list}c[1c]}'/>
<field declared_type='char' name='used' type='c'/>
<field declared_type='char*' name='param' type='[1c]'/>
</struct>
<struct name='projUV' type='{_projUV=&quot;u&quot;d&quot;v&quot;d}'>
<field declared_type='double' name='u' type='d'/>
<field declared_type='double' name='v' type='d'/>
</struct>
<constant declared_type='char*' name='EMESS_H_ID' type='[33c]'/>
<constant declared_type='struct geodesic' name='GEODESIC' type='{geodesic=dddddddddddddi}'/>
<constant declared_type='char*' name='GEODESIC_H_ID' type='[36c]'/>
<constant const='true' declared_type='NSString*' name='GRMustacheErrorDomain' type='@'/>
<constant declared_type='NSString*' name='GRMustacheFilterException' type='@'/>
<constant const='true' declared_type='NSString*' name='GRMustacheRenderingException' type='@'/>
<constant declared_type='int' name='PROJ_HEAD' type='i'/>
<constant const='true' declared_type='NSString*' name='RMResumeNetworkOperations' type='@'/>
<constant const='true' declared_type='NSString*' name='RMSuspendNetworkOperations' type='@'/>
<constant declared_type='double' name='del_alpha' type='d'/>
<constant declared_type='struct EMESS' name='emess_dat' type='{EMESS=**i}'/>
<constant declared_type='double' name='fr_meter' type='d'/>
<constant declared_type='int' name='jstring' type='i'/>
<constant const='true' declared_type='double' name='kRMMaxLatitude' type='d'/>
<constant const='true' declared_type='double' name='kRMMaxLongitude' type='d'/>
<constant const='true' declared_type='double' name='kRMMinLatitude' type='d'/>
<constant const='true' declared_type='double' name='kRMMinLongitude' type='d'/>
<constant declared_type='NSTimeInterval' name='kSMCalloutViewRepositionDelayForUIScrollView' type='d'/>
<constant declared_type='int' name='n_S' type='i'/>
<constant declared_type='int' name='n_alpha' type='i'/>
<constant declared_type='struct PJ_DATUMS*' name='pj_datums' type='^{PJ_DATUMS=****}'/>
<constant declared_type='struct PJ_ELLPS*' name='pj_ellps' type='^{PJ_ELLPS=****}'/>
<constant declared_type='int' name='pj_errno' type='i'/>
<constant declared_type='struct PJ_LIST*' name='pj_list' type='^{PJ_LIST=*^?^*}'/>
<constant declared_type='struct PJ_PRIME_MERIDIANS*' name='pj_prime_meridians' type='^{PJ_PRIME_MERIDIANS=**}'/>
<constant const='true' declared_type='char*' name='pj_release' type='^c'/>
<constant declared_type='struct PJ_UNITS*' name='pj_units' type='^{PJ_UNITS=***}'/>
<constant declared_type='double' name='to_meter' type='d'/>
<string_constant name='PACKAGE' value='proj'/>
<string_constant name='PACKAGE_BUGREPORT' value='warmerdam@pobox.com'/>
<string_constant name='PACKAGE_NAME' value='PROJ.4 Projections'/>
<string_constant name='PACKAGE_STRING' value='PROJ.4 Projections 4.6.0'/>
<string_constant name='PACKAGE_TARNAME' value='proj'/>
<string_constant name='PACKAGE_VERSION' value='4.6.0'/>
<string_constant name='PROJ_LIB' value='PROJ_LIB'/>
<string_constant name='RMTileRequested' nsstring='true' value='RMTileRequested'/>
<string_constant name='RMTileRetrieved' nsstring='true' value='RMTileRetrieved'/>
<string_constant name='VERSION' value='4.6.0'/>
<string_constant name='kMapboxPlaceholderMapID' nsstring='true' value='examples.map-z2effxa8'/>
<enum name='DEG_TO_RAD' value='.0174532925199432958'/>
<enum name='DIR_CHAR' value='47'/>
<enum name='FORTPI' value='0.78539816339744833'/>
<enum name='GEOCENT_A_ERROR' value='4'/>
<enum name='GEOCENT_A_LESS_B_ERROR' value='16'/>
<enum name='GEOCENT_B_ERROR' value='8'/>
<enum name='GEOCENT_LAT_ERROR' value='1'/>
<enum name='GEOCENT_LON_ERROR' value='2'/>
<enum name='GEOCENT_NO_ERROR' value='0'/>
<enum name='GRMUSTACHE_MAJOR_VERSION' value='5'/>
<enum name='GRMUSTACHE_MINOR_VERSION' value='4'/>
<enum name='GRMUSTACHE_PATCH_VERSION' value='3'/>
<enum name='GRMUSTACHE_VERSION_5_0' value='5000'/>
<enum name='GRMUSTACHE_VERSION_5_1' value='5010'/>
<enum name='GRMUSTACHE_VERSION_5_2' value='5020'/>
<enum name='GRMUSTACHE_VERSION_5_3' value='5030'/>
<enum name='GRMUSTACHE_VERSION_5_4' value='5040'/>
<enum name='GRMUSTACHE_VERSION_MAX_ALLOWED' value='5040'/>
<enum name='GRMUSTACHE_VERSION_MIN_REQUIRED' value='5040'/>
<enum name='GRMustacheErrorCodeParseError' value='0'/>
<enum name='GRMustacheErrorCodeTemplateNotFound' value='1'/>
<enum name='GRMustacheInterpretationSection' value='2'/>
<enum name='GRMustacheSectionTagInterpretation' value='0'/>
<enum name='GRMustacheVariableTagInterpretation' value='1'/>
<enum name='HALFPI' value='1.5707963267948966'/>
<enum name='HAVE_DLFCN_H' value='1'/>
<enum name='HAVE_INTTYPES_H' value='1'/>
<enum name='HAVE_LIBM' value='1'/>
<enum name='HAVE_MEMORY_H' value='1'/>
<enum name='HAVE_STDINT_H' value='1'/>
<enum name='HAVE_STDLIB_H' value='1'/>
<enum name='HAVE_STRINGS_H' value='1'/>
<enum name='HAVE_STRING_H' value='1'/>
<enum name='HAVE_SYS_STAT_H' value='1'/>
<enum name='HAVE_SYS_TYPES_H' value='1'/>
<enum name='HAVE_UNISTD_H' value='1'/>
<enum name='ID_TAG_MAX' value='50'/>
<enum name='IS_ANAL_CONV' value='8'/>
<enum name='IS_ANAL_HK' value='4'/>
<enum name='IS_ANAL_XL_YL' value='1'/>
<enum name='IS_ANAL_XP_YP' value='2'/>
<enum name='MAX_PATH_FILENAME' value='1024'/>
<enum name='MAX_TAB_ID' value='80'/>
<enum name='NS_BLOCK_ASSERTIONS' value='1'/>
<enum name='PI' value='3.14159265358979323846'/>
<enum name='PJD_3PARAM' value='1'/>
<enum name='PJD_7PARAM' value='2'/>
<enum name='PJD_ERR_GEOCENTRIC' value='-45'/>
<enum name='PJD_GRIDSHIFT' value='3'/>
<enum name='PJD_UNKNOWN' value='0'/>
<enum name='PJD_WGS84' value='4'/>
<enum name='PJ_VERSION' value='470'/>
<enum name='RAD_TO_DEG' value='57.29577951308232'/>
<enum name='RMAbstractWebMapSourceDefaultRetryCount' value='3'/>
<enum name='RMAbstractWebMapSourceDefaultWaitSeconds' value='15.0'/>
<enum name='SMCalloutAnimationBounce' value='0'/>
<enum name='SMCalloutAnimationFade' value='1'/>
<enum name='SMCalloutAnimationStretch' value='2'/>
<enum name='SMCalloutArrowDirectionAny' value='3'/>
<enum name='SMCalloutArrowDirectionDown' value='2'/>
<enum name='SMCalloutArrowDirectionUp' value='1'/>
<enum name='STDC_HEADERS' value='1'/>
<enum name='TWOPI' value='6.2831853071795864769'/>
<enum name='kDefaultMaxTileZoom' value='18'/>
<enum name='kDefaultMinTileZoom' value='0'/>
<enum name='kDefaultTileSize' value='256'/>
<enum name='kMBTilesDefaultMaxTileZoom' value='22'/>
<enum name='kMBTilesDefaultMinTileZoom' value='0'/>
<enum name='kMBTilesDefaultTileSize' value='256'/>
<enum name='kMapboxDefaultMaxTileZoom' value='18'/>
<enum name='kMapboxDefaultMinTileZoom' value='0'/>
<enum name='kMapboxDefaultTileSize' value='256'/>
<enum name='kMaxLat' value='90.0'/>
<enum name='kMaxLong' value='180.0'/>
<enum name='kRMTileSourcesContainerMaxZoom' value='255'/>
<enum name='kRMTileSourcesContainerMinZoom' value='0'/>
<function name='RMEuclideanDistanceBetweenProjectedPoints'>
<arg declared_type='RMProjectedPoint' name='point1' type='{_RMProjectedPoint=dd}'/>
<arg declared_type='RMProjectedPoint' name='point2' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='RMLogProjectedPoint'>
<arg declared_type='RMProjectedPoint' name='point' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RMLogProjectedRect'>
<arg declared_type='RMProjectedRect' name='rect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RMLogTile'>
<arg declared_type='RMTile' name='tile' type='{_RMTile=IIs}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='RMProjectedPointEqualToProjectedPoint'>
<arg declared_type='RMProjectedPoint' name='point1' type='{_RMProjectedPoint=dd}'/>
<arg declared_type='RMProjectedPoint' name='point2' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='_Bool' type='B'/>
</function>
<function name='RMProjectedPointMake'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<retval declared_type='RMProjectedPoint' type='{_RMProjectedPoint=dd}'/>
</function>
<function name='RMProjectedRectContainsProjectedPoint'>
<arg declared_type='RMProjectedRect' name='rect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<arg declared_type='RMProjectedPoint' name='point' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='_Bool' type='B'/>
</function>
<function name='RMProjectedRectContainsProjectedRect'>
<arg declared_type='RMProjectedRect' name='rect1' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<arg declared_type='RMProjectedRect' name='rect2' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<retval declared_type='_Bool' type='B'/>
</function>
<function name='RMProjectedRectIntersection'>
<arg declared_type='RMProjectedRect' name='rect1' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<arg declared_type='RMProjectedRect' name='rect2' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</function>
<function name='RMProjectedRectIntersectsProjectedRect'>
<arg declared_type='RMProjectedRect' name='rect1' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<arg declared_type='RMProjectedRect' name='rect2' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<retval declared_type='_Bool' type='B'/>
</function>
<function name='RMProjectedRectIsZero'>
<arg declared_type='RMProjectedRect' name='rect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<retval declared_type='_Bool' type='B'/>
</function>
<function name='RMProjectedRectMake'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='width' type='d'/>
<arg declared_type='double' name='height' type='d'/>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</function>
<function name='RMProjectedRectUnion'>
<arg declared_type='RMProjectedRect' name='rect1' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<arg declared_type='RMProjectedRect' name='rect2' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</function>
<function name='RMProjectedRectZero'>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</function>
<function name='RMProjectedSizeContainsProjectedSize'>
<arg declared_type='RMProjectedSize' name='size1' type='{_RMProjectedSize=dd}'/>
<arg declared_type='RMProjectedSize' name='size2' type='{_RMProjectedSize=dd}'/>
<retval declared_type='_Bool' type='B'/>
</function>
<function name='RMProjectedSizeMake'>
<arg declared_type='double' name='width' type='d'/>
<arg declared_type='double' name='heigth' type='d'/>
<retval declared_type='RMProjectedSize' type='{_RMProjectedSize=dd}'/>
</function>
<function name='RMScaleCGPointAboutPoint'>
<arg declared_type='CGPoint' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='float' name='factor' type='f'/>
<arg declared_type='CGPoint' name='pivot' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='RMScaleCGRectAboutPoint'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='float' name='factor' type='f'/>
<arg declared_type='CGPoint' name='pivot' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='RMScaleProjectedPointAboutPoint'>
<arg declared_type='RMProjectedPoint' name='point' type='{_RMProjectedPoint=dd}'/>
<arg declared_type='float' name='factor' type='f'/>
<arg declared_type='RMProjectedPoint' name='pivot' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='RMProjectedPoint' type='{_RMProjectedPoint=dd}'/>
</function>
<function name='RMScaleProjectedRectAboutPoint'>
<arg declared_type='RMProjectedRect' name='rect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<arg declared_type='float' name='factor' type='f'/>
<arg declared_type='RMProjectedPoint' name='pivot' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</function>
<function name='RMTileDummy'>
<retval declared_type='RMTile' type='{_RMTile=IIs}'/>
</function>
<function name='RMTileHash'>
<arg declared_type='RMTile' name='tile' type='{_RMTile=IIs}'/>
<retval declared_type='uint64_t' type='Q'/>
</function>
<function name='RMTileIsDummy'>
<arg declared_type='RMTile' name='tile' type='{_RMTile=IIs}'/>
<retval declared_type='char' type='c'/>
</function>
<function name='RMTileKey'>
<arg declared_type='RMTile' name='tile' type='{_RMTile=IIs}'/>
<retval declared_type='uint64_t' type='Q'/>
</function>
<function name='RMTileMake'>
<arg declared_type='uint32_t' name='x' type='I'/>
<arg declared_type='uint32_t' name='y' type='I'/>
<arg declared_type='short' name='zoom' type='s'/>
<retval declared_type='RMTile' type='{_RMTile=IIs}'/>
</function>
<function name='RMTileRectRound'>
<arg declared_type='RMTileRect' name='rect' type='{_RMTileRect={_RMTilePoint={_RMTile=IIs}{CGPoint=ff}}{CGSize=ff}}' type64='{_RMTileRect={_RMTilePoint={_RMTile=IIs}{CGPoint=dd}}{CGSize=dd}}'/>
<retval declared_type='RMTileRect' type='{_RMTileRect={_RMTilePoint={_RMTile=IIs}{CGPoint=ff}}{CGSize=ff}}' type64='{_RMTileRect={_RMTilePoint={_RMTile=IIs}{CGPoint=dd}}{CGSize=dd}}'/>
</function>
<function name='RMTilesEqual'>
<arg declared_type='RMTile' name='one' type='{_RMTile=IIs}'/>
<arg declared_type='RMTile' name='two' type='{_RMTile=IIs}'/>
<retval declared_type='char' type='c'/>
</function>
<function name='RMTranslateCGPointBy'>
<arg declared_type='CGPoint' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGSize' name='delta' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</function>
<function name='RMTranslateCGRectBy'>
<arg declared_type='CGRect' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CGSize' name='delta' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</function>
<function name='RMTranslateProjectedPointBy'>
<arg declared_type='RMProjectedPoint' name='point' type='{_RMProjectedPoint=dd}'/>
<arg declared_type='RMProjectedSize' name='delta' type='{_RMProjectedSize=dd}'/>
<retval declared_type='RMProjectedPoint' type='{_RMProjectedPoint=dd}'/>
</function>
<function name='RMTranslateProjectedRectBy'>
<arg declared_type='RMProjectedRect' name='rect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<arg declared_type='RMProjectedSize' name='delta' type='{_RMProjectedSize=dd}'/>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</function>
<function name='aacos'>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='aasin'>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='aatan2'>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='adjlon'>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='asqrt'>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='bch2bps'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='projUV**' type='^^{?}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='bcheval'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='Tseries*' type='^{_Tseries={_projUV=dd}{_projUV=dd}^{PW_COEF}^{PW_COEF}iii}'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</function>
<function name='bchgen'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='projUV**' type='^^{?}'/>
<arg declared_type='projUV (*)(projUV)' function_pointer='true' type='^?'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='biveval'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='Tseries*' type='^{_Tseries={_projUV=dd}{_projUV=dd}^{PW_COEF}^{PW_COEF}iii}'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</function>
<function name='bpseval'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='Tseries*' type='^{_Tseries={_projUV=dd}{_projUV=dd}^{PW_COEF}^{PW_COEF}iii}'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</function>
<function name='dmstor'>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='char**' type='^*'/>
<retval declared_type='double' type='d'/>
</function>
<function name='emess' variadic='true'>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='freev2'>
<arg declared_type='void**' name='v' type='^^v'/>
<arg declared_type='int' name='nrows' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='geod_for'>
<retval declared_type='void' type='v'/>
</function>
<function name='geod_inv'>
<retval declared_type='void' type='v'/>
</function>
<function name='geod_pre'>
<retval declared_type='void' type='v'/>
</function>
<function name='geod_set'>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='hypot'>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='mk_cheby'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='double' type='d'/>
<arg declared_type='projUV*' type='^{_projUV=dd}'/>
<arg declared_type='projUV (*)(projUV)' function_pointer='true' type='^?'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</arg>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='Tseries*' type='^{_Tseries={_projUV=dd}{_projUV=dd}^{PW_COEF}^{PW_COEF}iii}'/>
</function>
<function name='nad_ctable_init'>
<arg declared_type='FILE*' name='fid' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<retval declared_type='struct CTABLE*' type='^{CTABLE=[80c]{?=dd}{?=dd}{?=ii}^{?}}'/>
</function>
<function name='nad_ctable_load'>
<arg declared_type='struct CTABLE*' type='^{CTABLE=[80c]{?=dd}{?=dd}{?=ii}^{?}}'/>
<arg declared_type='FILE*' name='fid' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='nad_cvt'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='struct CTABLE*' type='^{CTABLE=[80c]{?=dd}{?=dd}{?=ii}^{?}}'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</function>
<function name='nad_free'>
<arg declared_type='struct CTABLE*' type='^{CTABLE=[80c]{?=dd}{?=dd}{?=ii}^{?}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='nad_init'>
<arg declared_type='char*' type='*'/>
<retval declared_type='struct CTABLE*' type='^{CTABLE=[80c]{?=dd}{?=dd}{?=ii}^{?}}'/>
</function>
<function name='nad_intr'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='struct CTABLE*' type='^{CTABLE=[80c]{?=dd}{?=dd}{?=ii}^{?}}'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</function>
<function name='pj_Convert_Geocentric_To_Geodetic'>
<arg declared_type='GeocentricInfo*' name='gi' type='^{_GeocentricInfo=dddddd}'/>
<arg declared_type='double' name='X' type='d'/>
<arg declared_type='double' name='Y' type='d'/>
<arg declared_type='double' name='Z' type='d'/>
<arg declared_type='double*' name='Latitude' type='^d'/>
<arg declared_type='double*' name='Longitude' type='^d'/>
<arg declared_type='double*' name='Height' type='^d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_Convert_Geodetic_To_Geocentric'>
<arg declared_type='GeocentricInfo*' name='gi' type='^{_GeocentricInfo=dddddd}'/>
<arg declared_type='double' name='Latitude' type='d'/>
<arg declared_type='double' name='Longitude' type='d'/>
<arg declared_type='double' name='Height' type='d'/>
<arg declared_type='double*' name='X' type='^d'/>
<arg declared_type='double*' name='Y' type='^d'/>
<arg declared_type='double*' name='Z' type='^d'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='pj_Get_Geocentric_Parameters'>
<arg declared_type='GeocentricInfo*' name='gi' type='^{_GeocentricInfo=dddddd}'/>
<arg declared_type='double*' name='a' type='^d'/>
<arg declared_type='double*' name='b' type='^d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_Init_Geocentric'>
<arg declared_type='GeocentricInfo*' name='gi' type='^{_GeocentricInfo=dddddd}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_Set_Geocentric_Parameters'>
<arg declared_type='GeocentricInfo*' name='gi' type='^{_GeocentricInfo=dddddd}'/>
<arg declared_type='double' name='a' type='d'/>
<arg declared_type='double' name='b' type='d'/>
<retval declared_type='long' type='l' type64='q'/>
</function>
<function name='pj_acquire_lock'>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_angular_units_set'>
<arg declared_type='paralist*' type='^{ARG_list=^{ARG_list}c[1c]}'/>
<arg declared_type='PJ*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_apply_gridshift'>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='long' name='point_count' type='l' type64='q'/>
<arg declared_type='int' name='point_offset' type='i'/>
<arg declared_type='double*' name='x' type='^d'/>
<arg declared_type='double*' name='y' type='^d'/>
<arg declared_type='double*' name='z' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_authlat'>
<arg declared_type='double' type='d'/>
<arg declared_type='double*' type='^d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='pj_authset'>
<arg declared_type='double' type='d'/>
<retval declared_type='double*' type='^d'/>
</function>
<function name='pj_cleanup_lock'>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_clear_initcache'>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_clone_paralist'>
<arg const='true' declared_type='paralist*' type='^{ARG_list=^{ARG_list}c[1c]}'/>
<retval declared_type='paralist*' type='^{ARG_list=^{ARG_list}c[1c]}'/>
</function>
<function name='pj_compare_datums'>
<arg declared_type='projPJ' name='srcdefn' type='^v'/>
<arg declared_type='projPJ' name='dstdefn' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_dalloc'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_datum_set'>
<arg declared_type='paralist*' type='^{ARG_list=^{ARG_list}c[1c]}'/>
<arg declared_type='PJ*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_datum_transform'>
<arg declared_type='projPJ' name='src' type='^v'/>
<arg declared_type='projPJ' name='dst' type='^v'/>
<arg declared_type='long' name='point_count' type='l' type64='q'/>
<arg declared_type='int' name='point_offset' type='i'/>
<arg declared_type='double*' name='x' type='^d'/>
<arg declared_type='double*' name='y' type='^d'/>
<arg declared_type='double*' name='z' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_deallocate_grids'>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_deriv'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='double' type='d'/>
<arg declared_type='PJ*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<arg declared_type='struct DERIVS*' type='^{DERIVS=dddd}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_ell_set'>
<arg declared_type='paralist*' type='^{ARG_list=^{ARG_list}c[1c]}'/>
<arg declared_type='double*' type='^d'/>
<arg declared_type='double*' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_enfn'>
<arg declared_type='double' type='d'/>
<retval declared_type='double*' type='^d'/>
</function>
<function name='pj_factors'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='PJ*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<arg declared_type='double' type='d'/>
<arg declared_type='struct FACTORS*' type='^{FACTORS={DERIVS=dddd}ddddddddi}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_free'>
<arg declared_type='projPJ' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_fwd'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='projPJ' type='^v'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</function>
<function name='pj_gauss'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</function>
<function name='pj_gauss_ini'>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double*' type='^d'/>
<arg declared_type='double*' type='^d'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='pj_geocentric_to_geodetic'>
<arg declared_type='double' name='a' type='d'/>
<arg declared_type='double' name='es' type='d'/>
<arg declared_type='long' name='point_count' type='l' type64='q'/>
<arg declared_type='int' name='point_offset' type='i'/>
<arg declared_type='double*' name='x' type='^d'/>
<arg declared_type='double*' name='y' type='^d'/>
<arg declared_type='double*' name='z' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_geodetic_to_geocentric'>
<arg declared_type='double' name='a' type='d'/>
<arg declared_type='double' name='es' type='d'/>
<arg declared_type='long' name='point_count' type='l' type64='q'/>
<arg declared_type='int' name='point_offset' type='i'/>
<arg declared_type='double*' name='x' type='^d'/>
<arg declared_type='double*' name='y' type='^d'/>
<arg declared_type='double*' name='z' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_get_datums_ref'>
<retval declared_type='struct PJ_DATUMS*' type='^{PJ_DATUMS=****}'/>
</function>
<function name='pj_get_def'>
<arg declared_type='projPJ' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='pj_get_ellps_ref'>
<retval declared_type='struct PJ_ELLPS*' type='^{PJ_ELLPS=****}'/>
</function>
<function name='pj_get_errno_ref'>
<retval declared_type='int*' type='^i'/>
</function>
<function name='pj_get_list_ref'>
<retval declared_type='struct PJ_LIST*' type='^{PJ_LIST=*^?^*}'/>
</function>
<function name='pj_get_prime_meridians_ref'>
<retval declared_type='struct PJ_PRIME_MERIDIANS*' type='^{PJ_PRIME_MERIDIANS=**}'/>
</function>
<function name='pj_get_release'>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='pj_get_units_ref'>
<retval declared_type='struct PJ_UNITS*' type='^{PJ_UNITS=***}'/>
</function>
<function name='pj_gridinfo_free'>
<arg declared_type='PJ_GRIDINFO*' type='^{_pj_gi=***i^{CTABLE}^{_pj_gi}^{_pj_gi}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_gridinfo_init'>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='PJ_GRIDINFO*' type='^{_pj_gi=***i^{CTABLE}^{_pj_gi}^{_pj_gi}}'/>
</function>
<function name='pj_gridinfo_load'>
<arg declared_type='PJ_GRIDINFO*' type='^{_pj_gi=***i^{CTABLE}^{_pj_gi}^{_pj_gi}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_gridlist_from_nadgrids'>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='PJ_GRIDINFO**' type='^^{_pj_gi}'/>
</function>
<function name='pj_init'>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*'/>
<retval declared_type='projPJ' type='^v'/>
</function>
<function name='pj_init_plus'>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='projPJ' type='^v'/>
</function>
<function name='pj_insert_initcache'>
<arg const='true' declared_type='char*' name='filekey' type='*'/>
<arg const='true' declared_type='paralist*' name='list' type='^{ARG_list=^{ARG_list}c[1c]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_inv'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg declared_type='projPJ' type='^v'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</function>
<function name='pj_inv_gauss'>
<arg declared_type='projUV' type='{_projUV=dd}'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='projUV' type='{_projUV=dd}'/>
</function>
<function name='pj_inv_mlfn'>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double*' type='^d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='pj_is_geocent'>
<arg declared_type='projPJ' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_is_latlong'>
<arg declared_type='projPJ' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_latlong_from_proj'>
<arg declared_type='projPJ' type='^v'/>
<retval declared_type='projPJ' type='^v'/>
</function>
<function name='pj_malloc'>
<arg declared_type='size_t' type='L' type64='Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='pj_mkparam'>
<arg declared_type='char*' type='*'/>
<retval declared_type='paralist*' type='^{ARG_list=^{ARG_list}c[1c]}'/>
</function>
<function name='pj_mlfn'>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double*' type='^d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='pj_msfn'>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='pj_open_lib'>
<arg declared_type='char*' type='*'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='FILE*' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
</function>
<function name='pj_param'>
<arg declared_type='paralist*' type='^{ARG_list=^{ARG_list}c[1c]}'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='PVALUE' type='(?=di*)'/>
</function>
<function name='pj_phi2'>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='pj_pr_list'>
<arg declared_type='projPJ' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_prime_meridian_set'>
<arg declared_type='paralist*' type='^{ARG_list=^{ARG_list}c[1c]}'/>
<arg declared_type='PJ*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_qsfn'>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='pj_qsfn_'>
<arg declared_type='double' type='d'/>
<arg declared_type='PJ*' type='^{PJconsts=^?^?^?^?*^{ARG_list}iiiidddddddddddddddi[7d]dd}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='pj_release_lock'>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_search_initcache'>
<arg const='true' declared_type='char*' name='filekey' type='*'/>
<retval declared_type='paralist*' type='^{ARG_list=^{ARG_list}c[1c]}'/>
</function>
<function name='pj_set_finder'>
<arg const='true' declared_type='char *(*)(char *)' function_pointer='true' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<retval const='true' declared_type='char*' type='*'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_set_searchpath'>
<arg declared_type='int' name='count' type='i'/>
<arg const='true' declared_type='char**' name='path' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='pj_strerrno'>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='pj_transform'>
<arg declared_type='projPJ' name='src' type='^v'/>
<arg declared_type='projPJ' name='dst' type='^v'/>
<arg declared_type='long' name='point_count' type='l' type64='q'/>
<arg declared_type='int' name='point_offset' type='i'/>
<arg declared_type='double*' name='x' type='^d'/>
<arg declared_type='double*' name='y' type='^d'/>
<arg declared_type='double*' name='z' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='pj_tsfn'>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='pj_zpoly1'>
<arg declared_type='COMPLEX' type='{_COMPLEX=dd}'/>
<arg declared_type='COMPLEX*' type='^{_COMPLEX=dd}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='COMPLEX' type='{_COMPLEX=dd}'/>
</function>
<function name='pj_zpolyd1'>
<arg declared_type='COMPLEX' type='{_COMPLEX=dd}'/>
<arg declared_type='COMPLEX*' type='^{_COMPLEX=dd}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='COMPLEX*' type='^{_COMPLEX=dd}'/>
<retval declared_type='COMPLEX' type='{_COMPLEX=dd}'/>
</function>
<function name='proj_inv_mdist'>
<arg declared_type='double' type='d'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='double' type='d'/>
</function>
<function name='proj_mdist'>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<arg declared_type='double' type='d'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='double' type='d'/>
</function>
<function name='proj_mdist_ini'>
<arg declared_type='double' type='d'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='rtodms'>
<arg declared_type='char*' type='*'/>
<arg declared_type='double' type='d'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='set_rtodms'>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='vector1'>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='vector2'>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void**' type='^^v'/>
</function>
<class name='FMDatabase'>
<method selector='beginDeferredTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='boolForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='objs' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='busyRetryTimeout'>
<retval declared_type='int' type='i'/>
</method>
<method selector='cachedStatements'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='changes'>
<retval declared_type='int' type='i'/>
</method>
<method selector='checkedOut'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearCachedStatements'>
<retval declared_type='void' type='v'/>
</method>
<method selector='close'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='closeOpenResultSets'>
<retval declared_type='void' type='v'/>
</method>
<method selector='columnExists:columnName:'>
<arg declared_type='NSString*' index='0' name='tableName' type='@'/>
<arg declared_type='NSString*' index='1' name='columnName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commit'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='crashOnErrors'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='objs' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='databasePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='databaseWithPath:'>
<arg declared_type='NSString*' index='0' name='inPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='dateForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='objs' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='doubleForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='objs' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='executeQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='executeQuery:withArgumentsInArray:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSArray*' index='1' name='arguments' type='@'/>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='executeQuery:withParameterDictionary:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='arguments' type='@'/>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='executeQueryWithFormat:' variadic='true'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='executeUpdate:' variadic='true'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeUpdate:withArgumentsInArray:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSArray*' index='1' name='arguments' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeUpdate:withParameterDictionary:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='arguments' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeUpdateWithFormat:' variadic='true'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getSchema'>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='getTableSchema:'>
<arg declared_type='NSString*' index='0' name='tableName' type='@'/>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='goodConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hadError'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasOpenResultSets'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inSavePoint:'>
<arg declared_type='void (^)(BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='inTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' index='0' name='inPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='intForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='objs' type='@'/>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='isSQLiteThreadSafe'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastError'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='lastErrorCode'>
<retval declared_type='int' type='i'/>
</method>
<method selector='lastErrorMessage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='lastInsertRowId'>
<retval declared_type='sqlite_int64' type='q'/>
</method>
<method selector='logsErrors'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='longForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='objs' type='@'/>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method selector='makeFunctionNamed:maximumArguments:withBlock:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='int' index='1' name='count' type='i'/>
<arg declared_type='void (^)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{Mem}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='open'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openWithFlags:'>
<arg declared_type='int' index='0' name='flags' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rekey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='releaseSavePointWithName:error:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSError**' index='1' name='outErr' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rollback'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rollbackToSavePointWithName:error:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSError**' index='1' name='outErr' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBusyRetryTimeout:'>
<arg declared_type='int' index='0' name='busyRetryTimeout' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCachedStatements:'>
<arg declared_type='NSMutableDictionary*' index='0' name='cachedStatements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCheckedOut:'>
<arg declared_type='BOOL' index='0' name='checkedOut' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCrashOnErrors:'>
<arg declared_type='BOOL' index='0' name='crashOnErrors' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setLogsErrors:'>
<arg declared_type='BOOL' index='0' name='logsErrors' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldCacheStatements:'>
<arg declared_type='BOOL' index='0' name='value' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTraceExecution:'>
<arg declared_type='BOOL' index='0' name='traceExecution' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldCacheStatements'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sqliteHandle'>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</method>
<method class_method='true' selector='sqliteLibVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='startSavePointWithName:error:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSError**' index='1' name='outErr' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stringForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='objs' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='tableExists:'>
<arg declared_type='NSString*' index='0' name='tableName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='traceExecution'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='update:withErrorAndBindings:' variadic='true'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSError**' index='1' name='outErr' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validateSQL:error:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='FMDatabasePool'>
<method selector='countOfCheckedInDatabases'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='countOfCheckedOutDatabases'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='countOfOpenDatabases'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='databasePoolWithPath:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='inDatabase:'>
<arg declared_type='void (^)(FMDatabase *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='inDeferredTransaction:'>
<arg declared_type='void (^)(FMDatabase *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='inSavePoint:'>
<arg declared_type='void (^)(FMDatabase *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='inTransaction:'>
<arg declared_type='void (^)(FMDatabase *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='maximumNumberOfDatabasesToCreate'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='releaseAllDatabases'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfDatabasesToCreate:'>
<arg declared_type='NSUInteger' index='0' name='maximumNumberOfDatabasesToCreate' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPath:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FMDatabaseQueue'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='databaseQueueWithPath:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inDatabase:'>
<arg declared_type='void (^)(FMDatabase *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='inDeferredTransaction:'>
<arg declared_type='void (^)(FMDatabase *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='inSavePoint:'>
<arg declared_type='void (^)(FMDatabase *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='inTransaction:'>
<arg declared_type='void (^)(FMDatabase *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setPath:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FMResultSet'>
<method selector='UTF8StringForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval const='true' declared_type='unsigned char*' type='*'/>
</method>
<method selector='UTF8StringForColumnName:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval const='true' declared_type='unsigned char*' type='*'/>
</method>
<method selector='boolForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='boolForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='columnCount'>
<retval declared_type='int' type='i'/>
</method>
<method selector='columnIndexForName:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='columnIndexIsNull:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnIsNull:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnNameForIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='columnNameToIndexMap'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='dataForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dataForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dataNoCopyForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dataNoCopyForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dateForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='doubleForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='doubleForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='hasAnotherRow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='intForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='intForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='kvcMagic:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='longForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method selector='longForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method selector='longLongIntForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='long long' type='q'/>
</method>
<method selector='longLongIntForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='long long' type='q'/>
</method>
<method selector='next'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectForColumnName:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='query'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='resultDict'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='resultSetWithStatement:usingParentDatabase:'>
<arg declared_type='FMStatement*' index='0' name='statement' type='@'/>
<arg declared_type='FMDatabase*' index='1' name='aDB' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setColumnNameToIndexMap:'>
<arg declared_type='NSMutableDictionary*' index='0' name='columnNameToIndexMap' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentDB:'>
<arg declared_type='FMDatabase*' index='0' name='newDb' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuery:'>
<arg declared_type='NSString*' index='0' name='query' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatement:'>
<arg declared_type='FMStatement*' index='0' name='statement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statement'>
<retval declared_type='FMStatement*' type='@'/>
</method>
<method selector='stringForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='FMStatement'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='query'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuery:'>
<arg declared_type='NSString*' index='0' name='query' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatement:'>
<arg declared_type='sqlite3_stmt*' index='0' name='statement' type='^{sqlite3_stmt=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseCount:'>
<arg declared_type='long' index='0' name='useCount' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statement'>
<retval declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
</method>
<method selector='useCount'>
<retval declared_type='long' type='l' type64='q'/>
</method>
</class>
<class name='GRMustache'>
<method class_method='true' selector='preventNSUndefinedKeyExceptionAttack'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='version'>
<retval declared_type='GRMustacheVersion' type='{_GRMustacheVersion=iii}'/>
</method>
</class>
<class name='GRMustacheDynamicPartial'>
<method class_method='true' selector='dynamicPartialWithName:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GRMustacheFilter'>
<method class_method='true' selector='filterWithBlock:'>
<arg declared_type='id (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GRMustacheHelper'>
<method class_method='true' selector='helperWithBlock:'>
<arg declared_type='NSString *(^)(GRMustacheSection *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='GRMustacheSection*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GRMustacheInvocation'>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='returnValue'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setReturnValue:'>
<arg declared_type='id' index='0' name='returnValue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='GRMustacheSection'>
<method selector='innerTemplateString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='render'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderTemplateString:error:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='GRMustacheSectionHelper'>
<method class_method='true' selector='helperWithBlock:'>
<arg declared_type='NSString *(^)(GRMustacheSection *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='GRMustacheSection*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GRMustacheSectionTagHelper'>
<method class_method='true' selector='helperWithBlock:'>
<arg declared_type='NSString *(^)(GRMustacheSectionTagRenderingContext *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='GRMustacheSectionTagRenderingContext*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GRMustacheSectionTagRenderingContext'>
<method selector='innerTemplateString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='render'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderTemplateString:error:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='GRMustacheTemplate'>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='render'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderObject:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='renderObject:fromContentsOfFile:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='path' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='renderObject:fromContentsOfURL:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='renderObject:fromResource:bundle:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSBundle*' index='2' name='bundle' type='@'/>
<arg declared_type='NSError**' index='3' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='renderObject:fromResource:withExtension:bundle:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='ext' type='@'/>
<arg declared_type='NSBundle*' index='3' name='bundle' type='@'/>
<arg declared_type='NSError**' index='4' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='renderObject:fromString:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='NSString*' index='1' name='templateString' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderObject:withFilters:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='id' index='1' name='filters' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='renderObject:withFilters:fromContentsOfFile:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='id' index='1' name='filters' type='@'/>
<arg declared_type='NSString*' index='2' name='path' type='@'/>
<arg declared_type='NSError**' index='3' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='renderObject:withFilters:fromContentsOfURL:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='id' index='1' name='filters' type='@'/>
<arg declared_type='NSURL*' index='2' name='url' type='@'/>
<arg declared_type='NSError**' index='3' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='renderObject:withFilters:fromResource:bundle:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='id' index='1' name='filters' type='@'/>
<arg declared_type='NSString*' index='2' name='name' type='@'/>
<arg declared_type='NSBundle*' index='3' name='bundle' type='@'/>
<arg declared_type='NSError**' index='4' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='renderObject:withFilters:fromResource:withExtension:bundle:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='id' index='1' name='filters' type='@'/>
<arg declared_type='NSString*' index='2' name='name' type='@'/>
<arg declared_type='NSString*' index='3' name='ext' type='@'/>
<arg declared_type='NSBundle*' index='4' name='bundle' type='@'/>
<arg declared_type='NSError**' index='5' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='renderObject:withFilters:fromString:error:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<arg declared_type='id' index='1' name='filters' type='@'/>
<arg declared_type='NSString*' index='2' name='templateString' type='@'/>
<arg declared_type='NSError**' index='3' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderObjectsFromArray:'>
<arg declared_type='NSArray*' index='0' name='objects' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderObjectsFromArray:withFilters:'>
<arg declared_type='NSArray*' index='0' name='objects' type='@'/>
<arg declared_type='id' index='1' name='filters' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderObjectsInArray:'>
<arg declared_type='NSArray*' index='0' name='objects' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderObjectsInArray:withFilters:'>
<arg declared_type='NSArray*' index='0' name='objects' type='@'/>
<arg declared_type='id' index='1' name='filters' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='templateFromContentsOfFile:error:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateFromContentsOfURL:error:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateFromResource:bundle:error:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSBundle*' index='1' name='bundle' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateFromResource:withExtension:bundle:error:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSString*' index='1' name='ext' type='@'/>
<arg declared_type='NSBundle*' index='2' name='bundle' type='@'/>
<arg declared_type='NSError**' index='3' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateFromString:error:'>
<arg declared_type='NSString*' index='0' name='templateString' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GRMustacheTemplateRepository'>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDataSource:'>
<arg declared_type='id' index='0' name='dataSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='templateForName:error:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='GRMustacheTemplate*' type='@'/>
</method>
<method selector='templateFromString:error:'>
<arg declared_type='NSString*' index='0' name='templateString' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='GRMustacheTemplate*' type='@'/>
</method>
<method class_method='true' selector='templateRepository'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateRepositoryWithBaseURL:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateRepositoryWithBaseURL:templateExtension:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<arg declared_type='NSString*' index='1' name='ext' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateRepositoryWithBaseURL:templateExtension:encoding:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<arg declared_type='NSString*' index='1' name='ext' type='@'/>
<arg declared_type='NSStringEncoding' index='2' name='encoding' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateRepositoryWithBundle:'>
<arg declared_type='NSBundle*' index='0' name='bundle' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateRepositoryWithBundle:templateExtension:'>
<arg declared_type='NSBundle*' index='0' name='bundle' type='@'/>
<arg declared_type='NSString*' index='1' name='ext' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateRepositoryWithBundle:templateExtension:encoding:'>
<arg declared_type='NSBundle*' index='0' name='bundle' type='@'/>
<arg declared_type='NSString*' index='1' name='ext' type='@'/>
<arg declared_type='NSStringEncoding' index='2' name='encoding' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateRepositoryWithDirectory:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateRepositoryWithDirectory:templateExtension:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='NSString*' index='1' name='ext' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateRepositoryWithDirectory:templateExtension:encoding:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<arg declared_type='NSString*' index='1' name='ext' type='@'/>
<arg declared_type='NSStringEncoding' index='2' name='encoding' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='templateRepositoryWithPartialsDictionary:'>
<arg declared_type='NSDictionary*' index='0' name='partialsDictionary' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GRMustacheVariable'>
<method selector='renderTemplateNamed:error:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderTemplateString:error:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='GRMustacheVariableHelper'>
<method class_method='true' selector='helperWithBlock:'>
<arg declared_type='NSString *(^)(GRMustacheVariable *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='GRMustacheVariable*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GRMustacheVariableTagHelper'>
<method class_method='true' selector='helperWithBlock:'>
<arg declared_type='NSString *(^)(GRMustacheVariableTagRenderingContext *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='GRMustacheVariableTagRenderingContext*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='GRMustacheVariableTagRenderingContext'>
<method selector='renderTemplateNamed:error:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderTemplateString:error:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<arg declared_type='NSError**' index='1' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSData'>
<method class_method='true' selector='brandedDataWithContentsOfURL:'>
<arg declared_type='NSURL*' index='0' name='aURL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='addImage:forTile:withCacheKey:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='RMTile' index='1' name='tile' type='{_RMTile=IIs}'/>
<arg declared_type='NSString*' index='2' name='cacheKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='afterMapMove:byUser:'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='BOOL' index='1' name='wasUserAction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='afterMapZoom:byUser:'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='BOOL' index='1' name='wasUserAction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beforeMapMove:byUser:'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='BOOL' index='1' name='wasUserAction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beforeMapZoom:byUser:'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='BOOL' index='1' name='wasUserAction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cachedImage:withCacheKey:'>
<arg declared_type='RMTile' index='0' name='tile' type='{_RMTile=IIs}'/>
<arg declared_type='NSString*' index='1' name='cacheKey' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='calloutView:delayForRepositionWithSize:'>
<arg declared_type='SMCalloutView*' index='0' name='calloutView' type='@'/>
<arg declared_type='CGSize' index='1' name='offset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='calloutViewDidAppear:'>
<arg declared_type='SMCalloutView*' index='0' name='calloutView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='calloutViewDidDisappear:'>
<arg declared_type='SMCalloutView*' index='0' name='calloutView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelAllDownloads'>
<retval declared_type='void' type='v'/>
</method>
<method selector='databasePool:shouldAddDatabaseToPool:'>
<arg declared_type='FMDatabasePool*' index='0' name='pool' type='@'/>
<arg declared_type='FMDatabase*' index='1' name='database' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='didReceiveMemoryWarning'>
<retval declared_type='void' type='v'/>
</method>
<method selector='doubleTapOnAnnotation:onMap:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<arg declared_type='RMMapView*' index='1' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doubleTapOnLabelForAnnotation:onMap:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<arg declared_type='RMMapView*' index='1' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doubleTapOnMap:at:'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='formattedOutputOfType:forPoint:'>
<arg declared_type='id' index='0' name='outputType' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='formattedOutputOfType:forPoint:inMapView:'>
<arg declared_type='id' index='0' name='outputType' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='RMMapView*' index='2' name='mapView' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='imageForTile:inCache:'>
<arg declared_type='RMTile' index='0' name='tile' type='{_RMTile=IIs}'/>
<arg declared_type='RMTileCache*' index='1' name='tileCache' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='isCacheable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='jr_swizzleClassMethod:withClassMethod:error:'>
<arg declared_type='SEL' index='0' name='origSel_' type=':'/>
<arg declared_type='SEL' index='1' name='altSel_' type=':'/>
<arg declared_type='NSError**' index='2' name='error_' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='jr_swizzleMethod:withMethod:error:'>
<arg declared_type='SEL' index='0' name='origSel_' type=':'/>
<arg declared_type='SEL' index='1' name='altSel_' type=':'/>
<arg declared_type='NSError**' index='2' name='error_' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='latitudeLongitudeBoundingBox'>
<retval declared_type='RMSphericalTrapezium' type='{_RMSphericalTrapezium={?=dd}{?=dd}}'/>
</method>
<method selector='longAttribution'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='longDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='longPressOnAnnotation:onMap:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<arg declared_type='RMMapView*' index='1' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='longPressOnMap:at:'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:annotation:didChangeDragState:fromOldState:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<arg declared_type='id' index='2' name='newState' type='@'/>
<arg declared_type='id' index='3' name='oldState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didChangeUserTrackingMode:animated:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='id' index='1' name='mode' type='@'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didDeselectAnnotation:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didFailToLocateUserWithError:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didHideLayerForAnnotation:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didSelectAnnotation:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didUpdateUserLocation:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMUserLocation*' index='1' name='userLocation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:layerForAnnotation:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<retval declared_type='RMMapLayer*' type='@'/>
</method>
<method selector='mapView:shouldDragAnnotation:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapView:willHideLayerForAnnotation:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapViewDidStopLocatingUser:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapViewRegionDidChange:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapViewWillStartLocatingUser:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='maxZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='mercatorToTileProjection'>
<retval declared_type='RMFractalTileProjection*' type='@'/>
</method>
<method selector='minZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='projection'>
<retval declared_type='RMProjection*' type='@'/>
</method>
<method selector='removeAllCachedImages'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllCachedImagesForCacheKey:'>
<arg declared_type='NSString*' index='0' name='cacheKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderForSectionTagInContext:'>
<arg declared_type='GRMustacheSectionTagRenderingContext*' index='0' name='context' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderForVariableTagInContext:'>
<arg declared_type='GRMustacheVariableTagRenderingContext*' index='0' name='context' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderSection:'>
<arg declared_type='GRMustacheSection*' index='0' name='section' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='renderVariable:'>
<arg declared_type='GRMustacheVariable*' index='0' name='variable' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='scrollView:correctedContentOffset:'>
<arg declared_type='RMMapScrollView*' index='0' name='aScrollView' type='@'/>
<arg declared_type='CGPoint*' index='1' name='aContentOffset' type='^{CGPoint=ff}' type64='^{CGPoint=dd}' type_modifier='N'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollView:correctedContentSize:'>
<arg declared_type='RMMapScrollView*' index='0' name='aScrollView' type='@'/>
<arg declared_type='CGSize*' index='1' name='aContentSize' type='^{CGSize=ff}' type64='^{CGSize=dd}' type_modifier='N'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheable:'>
<arg declared_type='BOOL' index='0' name='cacheable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxZoom:'>
<arg declared_type='float' index='0' name='maxZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinZoom:'>
<arg declared_type='float' index='0' name='minZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpaque:'>
<arg declared_type='BOOL' index='0' name='opaque' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shortAttribution'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='shortName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='singleTapOnMap:at:'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='singleTapTwoFingersOnMap:at:'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supportsInteractivity'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tapOnAnnotation:onMap:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<arg declared_type='RMMapView*' index='1' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tapOnCalloutAccessoryControl:forAnnotation:onMap:'>
<arg declared_type='UIControl*' index='0' name='control' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<arg declared_type='RMMapView*' index='2' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tapOnLabelForAnnotation:onMap:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<arg declared_type='RMMapView*' index='1' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='template:didInterpretReturnValueOfInvocation:as:'>
<arg declared_type='GRMustacheTemplate*' index='0' name='template' type='@'/>
<arg declared_type='GRMustacheInvocation*' index='1' name='invocation' type='@'/>
<arg declared_type='GRMustacheInterpretation' index='2' name='interpretation' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='template:willInterpretReturnValueOfInvocation:as:'>
<arg declared_type='GRMustacheTemplate*' index='0' name='template' type='@'/>
<arg declared_type='GRMustacheInvocation*' index='1' name='invocation' type='@'/>
<arg declared_type='GRMustacheInterpretation' index='2' name='interpretation' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='templateDidRender:'>
<arg declared_type='GRMustacheTemplate*' index='0' name='template' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='templateRepository:templateIDForName:relativeToTemplateID:'>
<arg declared_type='GRMustacheTemplateRepository*' index='0' name='templateRepository' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='id' index='2' name='baseTemplateID' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='templateRepository:templateStringForTemplateID:error:'>
<arg declared_type='GRMustacheTemplateRepository*' index='0' name='templateRepository' type='@'/>
<arg declared_type='id' index='1' name='templateID' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='templateWillRender:'>
<arg declared_type='GRMustacheTemplate*' index='0' name='template' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileCache:didBackgroundCacheTile:withIndex:ofTotalTileCount:'>
<arg declared_type='RMTileCache*' index='0' name='tileCache' type='@'/>
<arg declared_type='RMTile' index='1' name='tile' type='{_RMTile=IIs}'/>
<arg declared_type='int' index='2' name='tileIndex' type='i'/>
<arg declared_type='int' index='3' name='totalTileCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileCache:didBeginBackgroundCacheWithCount:forTileSource:'>
<arg declared_type='RMTileCache*' index='0' name='tileCache' type='@'/>
<arg declared_type='int' index='1' name='tileCount' type='i'/>
<arg declared_type='id' index='2' name='tileSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileCacheDidCancelBackgroundCache:'>
<arg declared_type='RMTileCache*' index='0' name='tileCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileCacheDidFinishBackgroundCache:'>
<arg declared_type='RMTileCache*' index='0' name='tileCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileSideLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='tileSourceHasTile:'>
<arg declared_type='RMTile' index='0' name='tile' type='{_RMTile=IIs}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='transformedValue:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='uniqueTilecacheKey'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSString'>
<method class_method='true' selector='brandedStringWithContentsOfURL:encoding:error:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSStringEncoding' index='1' name='enc' type='I' type64='Q'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSURLConnection'>
<method class_method='true' selector='sendBrandedSynchronousRequest:returningResponse:error:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSURLResponse**' index='1' name='response' type='^@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='NSData*' type='@'/>
</method>
</class>
<class name='RMAbstractWebMapSource'>
<method selector='URLForTile:'>
<arg declared_type='RMTile' index='0' name='tile' type='{_RMTile=IIs}'/>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='URLsForTile:'>
<arg declared_type='RMTile' index='0' name='tile' type='{_RMTile=IIs}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='requestTimeoutSeconds'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='retryCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setRequestTimeoutSeconds:'>
<arg declared_type='NSTimeInterval' index='0' name='requestTimeoutSeconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRetryCount:'>
<arg declared_type='NSUInteger' index='0' name='retryCount' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMAnnotation'>
<method selector='anchorPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='annotationIcon'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='annotationType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='annotationWithMapView:coordinate:andTitle:'>
<arg declared_type='RMMapView*' index='0' name='aMapView' type='@'/>
<arg declared_type='CLLocationCoordinate2D' index='1' name='aCoordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='NSString*' index='2' name='aTitle' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='badgeIcon'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='clusteredAnnotations'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='clusteringEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='coordinate'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='hasBoundingBox'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithMapView:coordinate:andTitle:'>
<arg declared_type='RMMapView*' index='0' name='aMapView' type='@'/>
<arg declared_type='CLLocationCoordinate2D' index='1' name='aCoordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='NSString*' index='2' name='aTitle' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAnnotationOnScreen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAnnotationVisibleOnScreen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAnnotationWithinBounds:'>
<arg declared_type='CGRect' index='0' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isClusterAnnotation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUserLocationAnnotation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='layer'>
<retval declared_type='RMMapLayer*' type='@'/>
</method>
<method selector='mapView'>
<retval declared_type='RMMapView*' type='@'/>
</method>
<method selector='position'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='projectedBoundingBox'>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</method>
<method selector='projectedLocation'>
<retval declared_type='RMProjectedPoint' type='{_RMProjectedPoint=dd}'/>
</method>
<method selector='quadTreeNode'>
<retval declared_type='RMQuadTreeNode*' type='@'/>
</method>
<method selector='setAnchorPoint:'>
<arg declared_type='CGPoint' index='0' name='anchorPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnnotationIcon:'>
<arg declared_type='UIImage*' index='0' name='annotationIcon' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnnotationType:'>
<arg declared_type='NSString*' index='0' name='annotationType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeIcon:'>
<arg declared_type='UIImage*' index='0' name='badgeIcon' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoundingBoxCoordinatesSouthWest:northEast:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='southWest' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationCoordinate2D' index='1' name='northEast' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoundingBoxFromLocations:'>
<arg declared_type='NSArray*' index='0' name='locations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClusteringEnabled:'>
<arg declared_type='BOOL' index='0' name='clusteringEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCoordinate:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHasBoundingBox:'>
<arg declared_type='BOOL' index='0' name='hasBoundingBox' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayer:'>
<arg declared_type='RMMapLayer*' index='0' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMapView:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg declared_type='CGPoint' index='0' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:animated:'>
<arg declared_type='CGPoint' index='0' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjectedBoundingBox:'>
<arg declared_type='RMProjectedRect' index='0' name='projectedBoundingBox' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjectedLocation:'>
<arg declared_type='RMProjectedPoint' index='0' name='projectedLocation' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuadTreeNode:'>
<arg declared_type='RMQuadTreeNode*' index='0' name='quadTreeNode' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitle:'>
<arg declared_type='NSString*' index='0' name='subtitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='id' index='0' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='userInfo'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RMAttributionViewController'>
<method selector='initWithMapView:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RMBingSource'>
<method selector='initWithMapsKey:'>
<arg declared_type='NSString*' index='0' name='mapsKey' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMapsKey:forImagerySet:'>
<arg declared_type='NSString*' index='0' name='mapsKey' type='@'/>
<arg declared_type='id' index='1' name='imagerySet' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RMCacheObject'>
<method selector='cacheKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='cacheObject:forTile:withCacheKey:'>
<arg declared_type='id' index='0' name='anObject' type='@'/>
<arg declared_type='RMTile' index='1' name='aTile' type='{_RMTile=IIs}'/>
<arg declared_type='NSString*' index='2' name='aCacheKey' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='cachedObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithObject:forTile:withCacheKey:'>
<arg declared_type='id' index='0' name='anObject' type='@'/>
<arg declared_type='RMTile' index='1' name='tile' type='{_RMTile=IIs}'/>
<arg declared_type='NSString*' index='2' name='aCacheKey' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='tile'>
<retval declared_type='RMTile' type='{_RMTile=IIs}'/>
</method>
<method selector='timestamp'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='touch'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMCircle'>
<method selector='fillColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='fillPatternImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='initWithView:radiusInMeters:'>
<arg declared_type='RMMapView*' index='0' name='aMapView' type='@'/>
<arg declared_type='CGFloat' index='1' name='newRadiusInMeters' type='f' type64='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lineColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='lineWidthInPixels'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='radiusInMeters'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setFillColor:'>
<arg declared_type='UIColor*' index='0' name='fillColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillPatternImage:'>
<arg declared_type='UIImage*' index='0' name='fillPatternImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineColor:'>
<arg declared_type='UIColor*' index='0' name='lineColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidthInPixels:'>
<arg declared_type='CGFloat' index='0' name='lineWidthInPixels' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusInMeters:'>
<arg declared_type='CGFloat' index='0' name='radiusInMeters' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShapeLayer:'>
<arg declared_type='CAShapeLayer*' index='0' name='shapeLayer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shapeLayer'>
<retval declared_type='CAShapeLayer*' type='@'/>
</method>
</class>
<class name='RMCircleAnnotation'>
<method selector='centerCoordinate'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='initWithMapView:centerCoordinate:radiusInMeters:'>
<arg declared_type='RMMapView*' index='0' name='aMapView' type='@'/>
<arg declared_type='CLLocationCoordinate2D' index='1' name='centerCoordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CGFloat' index='2' name='radiusInMeters' type='f' type64='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lineWidthInPixels'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='radiusInMeters'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setCenterCoordinate:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='centerCoordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidthInPixels:'>
<arg declared_type='CGFloat' index='0' name='lineWidthInPixels' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusInMeters:'>
<arg declared_type='CGFloat' index='0' name='radiusInMeters' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMCompositeSource'>
<method selector='initWithTileSources:tileCacheKey:'>
<arg declared_type='NSArray*' index='0' name='tileSources' type='@'/>
<arg declared_type='NSString*' index='1' name='tileCacheKey' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setTileSources:'>
<arg declared_type='NSArray*' index='0' name='tileSources' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileSources'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RMConfiguration'>
<method selector='cacheConfiguration'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='configuration'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='RMConfiguration*' type='@'/>
</method>
<method selector='setUserAgent:'>
<arg declared_type='NSString*' index='0' name='userAgent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userAgent'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='RMCoordinateGridSource'>
<method selector='gridColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='gridLabelInterval'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='gridLineWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='gridMode'>
<retval declared_type='RMCoordinateGridSource' type='{RMCoordinateGridSource=#}'/>
</method>
<method selector='majorLabelColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='majorLabelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='minorLabelColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='minorLabelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='setGridColor:'>
<arg declared_type='UIColor*' index='0' name='gridColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGridLabelInterval:'>
<arg declared_type='NSUInteger' index='0' name='gridLabelInterval' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGridLineWidth:'>
<arg declared_type='CGFloat' index='0' name='gridLineWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGridMode:'>
<arg declared_type='RMCoordinateGridSource' index='0' name='gridMode' type='{RMCoordinateGridSource=#}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMajorLabelColor:'>
<arg declared_type='UIColor*' index='0' name='majorLabelColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMajorLabelFont:'>
<arg declared_type='UIFont*' index='0' name='majorLabelFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorLabelColor:'>
<arg declared_type='UIColor*' index='0' name='minorLabelColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorLabelFont:'>
<arg declared_type='UIFont*' index='0' name='minorLabelFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMDBMapSource'>
<method selector='bottomRightOfCoverage'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='centerOfCoverage'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='topLeftOfCoverage'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
</class>
<class name='RMDatabaseCache'>
<method selector='capacity'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='databasePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='dbPathUsingCacheDir:'>
<arg declared_type='BOOL' index='0' name='useCacheDir' type='B'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fileSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='initUsingCacheDir:'>
<arg declared_type='BOOL' index='0' name='useCacheDir' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDatabase:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setCapacity:'>
<arg declared_type='NSUInteger' index='0' name='theCapacity' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDatabasePath:'>
<arg declared_type='NSString*' index='0' name='databasePath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpiryPeriod:'>
<arg declared_type='NSTimeInterval' index='0' name='theExpiryPeriod' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimalPurge:'>
<arg declared_type='NSUInteger' index='0' name='thePurgeMinimum' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPurgeStrategy:'>
<arg declared_type='id' index='0' name='theStrategy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMFractalTileProjection'>
<method selector='calculateNormalisedZoomFromScale:'>
<arg declared_type='float' index='0' name='scale' type='f'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='calculateScaleFromZoom:'>
<arg declared_type='float' index='0' name='zoom' type='f'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='calculateZoomFromScale:'>
<arg declared_type='float' index='0' name='scale' type='f'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='initFromProjection:tileSideLength:maxZoom:minZoom:'>
<arg declared_type='RMProjection*' index='0' name='projection' type='@'/>
<arg declared_type='NSUInteger' index='1' name='tileSideLength' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='2' name='aMaxZoom' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='3' name='aMinZoom' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='maxZoom'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minZoom'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='normaliseTile:'>
<arg declared_type='RMTile' index='0' name='tile' type='{_RMTile=IIs}'/>
<retval declared_type='RMTile' type='{_RMTile=IIs}'/>
</method>
<method selector='normaliseZoom:'>
<arg declared_type='float' index='0' name='zoom' type='f'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='planetBounds'>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</method>
<method selector='project:atScale:'>
<arg declared_type='RMProjectedPoint' index='0' name='aPoint' type='{_RMProjectedPoint=dd}'/>
<arg declared_type='float' index='1' name='scale' type='f'/>
<retval declared_type='RMTilePoint' type='{_RMTilePoint={_RMTile=IIs}{CGPoint=ff}}' type64='{_RMTilePoint={_RMTile=IIs}{CGPoint=dd}}'/>
</method>
<method selector='project:atZoom:'>
<arg declared_type='RMProjectedPoint' index='0' name='aPoint' type='{_RMProjectedPoint=dd}'/>
<arg declared_type='float' index='1' name='zoom' type='f'/>
<retval declared_type='RMTilePoint' type='{_RMTilePoint={_RMTile=IIs}{CGPoint=ff}}' type64='{_RMTilePoint={_RMTile=IIs}{CGPoint=dd}}'/>
</method>
<method selector='projectRect:atScale:'>
<arg declared_type='RMProjectedRect' index='0' name='aRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<arg declared_type='float' index='1' name='scale' type='f'/>
<retval declared_type='RMTileRect' type='{_RMTileRect={_RMTilePoint={_RMTile=IIs}{CGPoint=ff}}{CGSize=ff}}' type64='{_RMTileRect={_RMTilePoint={_RMTile=IIs}{CGPoint=dd}}{CGSize=dd}}'/>
</method>
<method selector='projectRect:atZoom:'>
<arg declared_type='RMProjectedRect' index='0' name='aRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<arg declared_type='float' index='1' name='zoom' type='f'/>
<retval declared_type='RMTileRect' type='{_RMTileRect={_RMTilePoint={_RMTile=IIs}{CGPoint=ff}}{CGSize=ff}}' type64='{_RMTileRect={_RMTilePoint={_RMTile=IIs}{CGPoint=dd}}{CGSize=dd}}'/>
</method>
<method selector='setMaxZoom:'>
<arg declared_type='NSUInteger' index='0' name='aMaxZoom' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinZoom:'>
<arg declared_type='NSUInteger' index='0' name='aMinZoom' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSideLength:'>
<arg declared_type='NSUInteger' index='0' name='aTileSideLength' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileSideLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='RMGenericMapSource'>
<method selector='initWithHost:tileCacheKey:minZoom:maxZoom:'>
<arg declared_type='NSString*' index='0' name='host' type='@'/>
<arg declared_type='NSString*' index='1' name='tileCacheKey' type='@'/>
<arg declared_type='float' index='2' name='minZoom' type='f'/>
<arg declared_type='float' index='3' name='maxZoom' type='f'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RMLoadingTileView'>
<method selector='mapZooming'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setMapZooming:'>
<arg declared_type='BOOL' index='0' name='mapZooming' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMMBTilesSource'>
<method selector='centerCoordinate'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='centerZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='coversFullWorld'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='formattedOutputOfType:forPoint:inMapView:'>
<arg declared_type='id' index='0' name='outputType' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='RMMapView*' index='2' name='mapView' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithTileSetResource:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTileSetResource:ofType:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSString*' index='1' name='extension' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTileSetURL:'>
<arg declared_type='NSURL*' index='0' name='tileSetURL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='legend'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='supportsInteractivity'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RMMapLayer'>
<method selector='annotation'>
<retval declared_type='RMAnnotation*' type='@'/>
</method>
<method selector='calloutOffset'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='canShowCallout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dragState'>
<retval declared_type='int' type='i'/>
</method>
<method selector='leftCalloutAccessoryView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='projectedLocation'>
<retval declared_type='RMProjectedPoint' type='{_RMProjectedPoint=dd}'/>
</method>
<method selector='rightCalloutAccessoryView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='setAnnotation:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCalloutOffset:'>
<arg declared_type='CGPoint' index='0' name='calloutOffset' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanShowCallout:'>
<arg declared_type='BOOL' index='0' name='canShowCallout' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDragState:'>
<arg declared_type='int' index='0' name='dragState' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDragState:animated:'>
<arg declared_type='id' index='0' name='dragState' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftCalloutAccessoryView:'>
<arg declared_type='UIView*' index='0' name='leftCalloutAccessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:animated:'>
<arg declared_type='CGPoint' index='0' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjectedLocation:'>
<arg declared_type='RMProjectedPoint' index='0' name='projectedLocation' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightCalloutAccessoryView:'>
<arg declared_type='UIView*' index='0' name='rightCalloutAccessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='id' index='0' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userInfo'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RMMapOverlayView'>
<method selector='addSublayer:'>
<arg declared_type='CALayer*' index='0' name='aLayer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertSublayer:above:'>
<arg declared_type='CALayer*' index='0' name='aLayer' type='@'/>
<arg declared_type='CALayer*' index='1' name='sublayer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertSublayer:atIndex:'>
<arg declared_type='CALayer*' index='0' name='aLayer' type='@'/>
<arg declared_type='unsigned int' index='1' name='index' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertSublayer:below:'>
<arg declared_type='CALayer*' index='0' name='aLayer' type='@'/>
<arg declared_type='CALayer*' index='1' name='sublayer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveLayersBy:'>
<arg declared_type='CGPoint' index='0' name='delta' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='overlayHitTest:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CALayer*' type='@'/>
</method>
<method selector='sublayersCount'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
</class>
<class name='RMMapScrollView'>
<method selector='mapScrollViewDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setMapScrollViewDelegate:'>
<arg declared_type='id' index='0' name='mapScrollViewDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMMapTiledLayerView'>
<method selector='initWithFrame:mapView:forTileSource:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='RMMapView*' index='1' name='aMapView' type='@'/>
<arg declared_type='id' index='2' name='aTileSource' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setUseSnapshotRenderer:'>
<arg declared_type='BOOL' index='0' name='useSnapshotRenderer' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='useSnapshotRenderer'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RMMapView'>
<method selector='addAnnotation:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnnotations:'>
<arg declared_type='NSArray*' index='0' name='annotations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTileSource:'>
<arg declared_type='id' index='0' name='tileSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addTileSource:atIndex:'>
<arg declared_type='id' index='0' name='tileSource' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='adjustTilesForRetinaDisplay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='adjustedZoomForRetinaDisplay'>
<retval declared_type='float' type='f'/>
</method>
<method selector='annotations'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='backgroundView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='bouncingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='centerCoordinate'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='centerProjectedPoint'>
<retval declared_type='RMProjectedPoint' type='{_RMProjectedPoint=dd}'/>
</method>
<method selector='clusterAreaSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='clusterMarkerSize'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='clusteringEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='coordinateToPixel:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='coordinateToProjectedPoint:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='RMProjectedPoint' type='{_RMProjectedPoint=dd}'/>
</method>
<method selector='debugTiles'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='decelerationMode'>
<retval declared_type='int' type='i'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='deselectAnnotation:animated:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='displayHeadingCalibration'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='draggingEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='formattedOutputOfType:forPoint:'>
<arg declared_type='id' index='0' name='outputType' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hideAttribution'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithFrame:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:andTilesource:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='id' index='1' name='newTilesource' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:andTilesource:centerCoordinate:zoomLevel:maxZoomLevel:minZoomLevel:backgroundImage:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='id' index='1' name='newTilesource' type='@'/>
<arg declared_type='CLLocationCoordinate2D' index='2' name='initialCenterCoordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='float' index='3' name='initialTileSourceZoomLevel' type='f'/>
<arg declared_type='float' index='4' name='initialTileSourceMaxZoomLevel' type='f'/>
<arg declared_type='float' index='5' name='initialTileSourceMinZoomLevel' type='f'/>
<arg declared_type='UIImage*' index='6' name='backgroundImage' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isUserLocationVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='latitudeLongitudeBoundingBox'>
<retval declared_type='RMSphericalTrapezium' type='{_RMSphericalTrapezium={?=dd}{?=dd}}'/>
</method>
<method selector='latitudeLongitudeBoundingBoxFor:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='RMSphericalTrapezium' type='{_RMSphericalTrapezium={?=dd}{?=dd}}'/>
</method>
<method selector='latitudeLongitudeBoundingBoxForTile:'>
<arg declared_type='RMTile' index='0' name='aTile' type='{_RMTile=IIs}'/>
<retval declared_type='RMSphericalTrapezium' type='{_RMSphericalTrapezium={?=dd}{?=dd}}'/>
</method>
<method selector='mapPositionForAnnotation:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='maxZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='mercatorToTileProjection'>
<retval declared_type='id' type='@'/>
</method>
<method selector='metersPerPixel'>
<retval declared_type='double' type='d'/>
</method>
<method selector='minZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='missingTilesDepth'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='moveBy:'>
<arg declared_type='CGSize' index='0' name='delta' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveTileSourceAtIndex:toIndex:'>
<arg declared_type='NSUInteger' index='0' name='fromIndex' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='toIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='nextNativeZoomFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='normalizeCoordinate:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='orderClusterMarkersAboveOthers'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='orderMarkersByYPosition'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='pathForBundleResourceNamed:ofType:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSString*' index='1' name='extension' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pixelToCoordinate:'>
<arg declared_type='CGPoint' index='0' name='pixelCoordinate' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='pixelToProjectedPoint:'>
<arg declared_type='CGPoint' index='0' name='pixelCoordinate' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='RMProjectedPoint' type='{_RMProjectedPoint=dd}'/>
</method>
<method selector='positionClusterMarkersAtTheGravityCenter'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='previousNativeZoomFactor'>
<retval declared_type='float' type='f'/>
</method>
<method selector='projectedBounds'>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</method>
<method selector='projectedOrigin'>
<retval declared_type='RMProjectedPoint' type='{_RMProjectedPoint=dd}'/>
</method>
<method selector='projectedPointToCoordinate:'>
<arg declared_type='RMProjectedPoint' index='0' name='projectedPoint' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='projectedPointToPixel:'>
<arg declared_type='RMProjectedPoint' index='0' name='projectedPoint' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='projectedSizeToViewSize:'>
<arg declared_type='RMProjectedSize' index='0' name='projectedSize' type='{_RMProjectedSize=dd}'/>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
<method selector='projectedViewSize'>
<retval declared_type='RMProjectedSize' type='{_RMProjectedSize=dd}'/>
</method>
<method selector='projection'>
<retval declared_type='RMProjection*' type='@'/>
</method>
<method selector='quadTree'>
<retval declared_type='RMQuadTree*' type='@'/>
</method>
<method selector='reloadTileSource:'>
<arg declared_type='id' index='0' name='tileSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadTileSourceAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllAnnotations'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllCachedImages'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnnotation:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnnotations:'>
<arg declared_type='NSArray*' index='0' name='annotations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTileSource:'>
<arg declared_type='id' index='0' name='tileSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTileSourceAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='resourceImageNamed:'>
<arg declared_type='NSString*' index='0' name='imageName' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='scaleDenominator'>
<retval declared_type='double' type='d'/>
</method>
<method selector='scaledMetersPerPixel'>
<retval declared_type='double' type='d'/>
</method>
<method selector='screenScale'>
<retval declared_type='float' type='f'/>
</method>
<method selector='selectAnnotation:animated:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='selectedAnnotation'>
<retval declared_type='RMAnnotation*' type='@'/>
</method>
<method selector='setAdjustTilesForRetinaDisplay:'>
<arg declared_type='BOOL' index='0' name='adjustTilesForRetinaDisplay' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlpha:forTileSource:'>
<arg declared_type='CGFloat' index='0' name='alpha' type='f' type64='d'/>
<arg declared_type='id' index='1' name='tileSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlpha:forTileSourceAtIndex:'>
<arg declared_type='CGFloat' index='0' name='alpha' type='f' type64='d'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnnotations:'>
<arg declared_type='NSArray*' index='0' name='annotations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImage:'>
<arg declared_type='UIImage*' index='0' name='backgroundImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='UIView*' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBouncingEnabled:'>
<arg declared_type='BOOL' index='0' name='bouncingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenterCoordinate:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='centerCoordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenterCoordinate:animated:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenterProjectedPoint:'>
<arg declared_type='RMProjectedPoint' index='0' name='centerProjectedPoint' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenterProjectedPoint:animated:'>
<arg declared_type='RMProjectedPoint' index='0' name='aPoint' type='{_RMProjectedPoint=dd}'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClusterAreaSize:'>
<arg declared_type='CGSize' index='0' name='clusterAreaSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClusterMarkerSize:'>
<arg declared_type='CGSize' index='0' name='clusterMarkerSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClusteringEnabled:'>
<arg declared_type='BOOL' index='0' name='clusteringEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setConstraintsSouthWest:northEast:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='southWest' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationCoordinate2D' index='1' name='northEast' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDebugTiles:'>
<arg declared_type='BOOL' index='0' name='debugTiles' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDecelerationMode:'>
<arg declared_type='int' index='0' name='decelerationMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayHeadingCalibration:'>
<arg declared_type='BOOL' index='0' name='displayHeadingCalibration' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDraggingEnabled:'>
<arg declared_type='BOOL' index='0' name='draggingEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidden:forTileSource:'>
<arg declared_type='BOOL' index='0' name='isHidden' type='B'/>
<arg declared_type='id' index='1' name='tileSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidden:forTileSourceAtIndex:'>
<arg declared_type='BOOL' index='0' name='isHidden' type='B'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHideAttribution:'>
<arg declared_type='BOOL' index='0' name='hideAttribution' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxZoom:'>
<arg declared_type='float' index='0' name='maxZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMercatorToTileProjection:'>
<arg declared_type='id' index='0' name='mercatorToTileProjection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetersPerPixel:'>
<arg declared_type='double' index='0' name='metersPerPixel' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMetersPerPixel:animated:'>
<arg declared_type='double' index='0' name='newMetersPerPixel' type='d'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinZoom:'>
<arg declared_type='float' index='0' name='minZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMissingTilesDepth:'>
<arg declared_type='NSUInteger' index='0' name='missingTilesDepth' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrderClusterMarkersAboveOthers:'>
<arg declared_type='BOOL' index='0' name='orderClusterMarkersAboveOthers' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrderMarkersByYPosition:'>
<arg declared_type='BOOL' index='0' name='orderMarkersByYPosition' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPositionClusterMarkersAtTheGravityCenter:'>
<arg declared_type='BOOL' index='0' name='positionClusterMarkersAtTheGravityCenter' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjectedBounds:'>
<arg declared_type='RMProjectedRect' index='0' name='projectedBounds' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjectedBounds:animated:'>
<arg declared_type='RMProjectedRect' index='0' name='boundsRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjectedConstraintsSouthWest:northEast:'>
<arg declared_type='RMProjectedPoint' index='0' name='southWest' type='{_RMProjectedPoint=dd}'/>
<arg declared_type='RMProjectedPoint' index='1' name='northEast' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjection:'>
<arg declared_type='RMProjection*' index='0' name='projection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuadTree:'>
<arg declared_type='RMQuadTree*' index='0' name='quadTree' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSelectedAnnotation:'>
<arg declared_type='RMAnnotation*' index='0' name='selectedAnnotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowLogoBug:'>
<arg declared_type='BOOL' index='0' name='showLogoBug' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowsUserLocation:'>
<arg declared_type='BOOL' index='0' name='showsUserLocation' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileCache:'>
<arg declared_type='RMTileCache*' index='0' name='tileCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSource:'>
<arg declared_type='id' index='0' name='tileSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSources:'>
<arg declared_type='NSArray*' index='0' name='tileSources' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSourcesContainer:'>
<arg declared_type='RMTileSourcesContainer*' index='0' name='tileSourcesContainer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSourcesMaxZoom:'>
<arg declared_type='float' index='0' name='tileSourcesMaxZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSourcesMinZoom:'>
<arg declared_type='float' index='0' name='tileSourcesMinZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSourcesZoom:'>
<arg declared_type='float' index='0' name='tileSourcesZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserTrackingMode:'>
<arg declared_type='int' index='0' name='userTrackingMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserTrackingMode:animated:'>
<arg declared_type='id' index='0' name='mode' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisibleAnnotations:'>
<arg declared_type='NSArray*' index='0' name='visibleAnnotations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZoom:'>
<arg declared_type='float' index='0' name='zoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZoom:animated:'>
<arg declared_type='float' index='0' name='newZoom' type='f'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZoom:atCoordinate:animated:'>
<arg declared_type='float' index='0' name='newZoom' type='f'/>
<arg declared_type='CLLocationCoordinate2D' index='1' name='newCenter' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setZoomingInPivotsAroundCenter:'>
<arg declared_type='BOOL' index='0' name='zoomingInPivotsAroundCenter' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showLogoBug'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='showsUserLocation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportsInteractivity'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='takeSnapshot'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='takeSnapshotAndIncludeOverlay:'>
<arg declared_type='BOOL' index='0' name='includeOverlay' type='B'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='tileCache'>
<retval declared_type='RMTileCache*' type='@'/>
</method>
<method selector='tileSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='tileSourceBoundsContainProjectedPoint:'>
<arg declared_type='RMProjectedPoint' index='0' name='point' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tileSources'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tileSourcesContainer'>
<retval declared_type='RMTileSourcesContainer*' type='@'/>
</method>
<method selector='tileSourcesMaxZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='tileSourcesMinZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='tileSourcesZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='tileWithCoordinate:andZoom:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='int' index='1' name='zoom' type='i'/>
<retval declared_type='RMTile' type='{_RMTile=IIs}'/>
</method>
<method selector='userLocation'>
<retval declared_type='RMUserLocation*' type='@'/>
</method>
<method selector='userTrackingMode'>
<retval declared_type='int' type='i'/>
</method>
<method selector='viewSizeToProjectedSize:'>
<arg declared_type='CGSize' index='0' name='screenSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='RMProjectedSize' type='{_RMProjectedSize=dd}'/>
</method>
<method selector='visibleAnnotations'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='zoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='zoomByFactor:near:animated:'>
<arg declared_type='float' index='0' name='zoomFactor' type='f'/>
<arg declared_type='CGPoint' index='1' name='center' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zoomInToNextNativeZoomAt:animated:'>
<arg declared_type='CGPoint' index='0' name='pivot' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zoomOutToNextNativeZoomAt:animated:'>
<arg declared_type='CGPoint' index='0' name='pivot' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zoomWithLatitudeLongitudeBoundsSouthWest:northEast:animated:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='southWest' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationCoordinate2D' index='1' name='northEast' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='zoomingInPivotsAroundCenter'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='RMMapboxSource'>
<method selector='centerCoordinate'>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='centerZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='coversFullWorld'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='formattedOutputOfType:forPoint:inMapView:'>
<arg declared_type='id' index='0' name='outputType' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='RMMapView*' index='2' name='mapView' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='imageQuality'>
<retval declared_type='int' type='i'/>
</method>
<method selector='infoDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initWithMapID:'>
<arg declared_type='NSString*' index='0' name='mapID' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMapID:enablingDataOnMapView:'>
<arg declared_type='NSString*' index='0' name='mapID' type='@'/>
<arg declared_type='RMMapView*' index='1' name='mapView' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMapID:enablingDataOnMapView:enablingSSL:'>
<arg declared_type='NSString*' index='0' name='mapID' type='@'/>
<arg declared_type='RMMapView*' index='1' name='mapView' type='@'/>
<arg declared_type='BOOL' index='2' name='enableSSL' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMapID:enablingSSL:'>
<arg declared_type='NSString*' index='0' name='mapID' type='@'/>
<arg declared_type='BOOL' index='1' name='enableSSL' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithReferenceURL:'>
<arg declared_type='NSURL*' index='0' name='referenceURL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithReferenceURL:enablingDataOnMapView:'>
<arg declared_type='NSURL*' index='0' name='referenceURL' type='@'/>
<arg declared_type='RMMapView*' index='1' name='mapView' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTileJSON:'>
<arg declared_type='NSString*' index='0' name='tileJSON' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTileJSON:enablingDataOnMapView:'>
<arg declared_type='NSString*' index='0' name='tileJSON' type='@'/>
<arg declared_type='RMMapView*' index='1' name='mapView' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='legend'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setImageQuality:'>
<arg declared_type='int' index='0' name='imageQuality' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supportsInteractivity'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tileJSON'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='tileJSONURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
</class>
<class name='RMMarker'>
<method selector='changeLabelUsingText:'>
<arg declared_type='NSString*' index='0' name='text' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeLabelUsingText:font:foregroundColor:backgroundColor:'>
<arg declared_type='NSString*' index='0' name='text' type='@'/>
<arg declared_type='UIFont*' index='1' name='font' type='@'/>
<arg declared_type='UIColor*' index='2' name='textColor' type='@'/>
<arg declared_type='UIColor*' index='3' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeLabelUsingText:position:'>
<arg declared_type='NSString*' index='0' name='text' type='@'/>
<arg declared_type='CGPoint' index='1' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='changeLabelUsingText:position:font:foregroundColor:backgroundColor:'>
<arg declared_type='NSString*' index='0' name='text' type='@'/>
<arg declared_type='CGPoint' index='1' name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='UIFont*' index='2' name='font' type='@'/>
<arg declared_type='UIColor*' index='3' name='textColor' type='@'/>
<arg declared_type='UIColor*' index='4' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='clearCachedMapboxMarkers'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='defaultFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='hideLabel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithMapboxMarkerImage'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMapboxMarkerImage:'>
<arg declared_type='NSString*' index='0' name='symbolName' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMapboxMarkerImage:tintColor:'>
<arg declared_type='NSString*' index='0' name='symbolName' type='@'/>
<arg declared_type='UIColor*' index='1' name='color' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMapboxMarkerImage:tintColor:size:'>
<arg declared_type='NSString*' index='0' name='symbolName' type='@'/>
<arg declared_type='UIColor*' index='1' name='color' type='@'/>
<arg declared_type='id' index='2' name='size' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMapboxMarkerImage:tintColorHex:'>
<arg declared_type='NSString*' index='0' name='symbolName' type='@'/>
<arg declared_type='NSString*' index='1' name='colorHex' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMapboxMarkerImage:tintColorHex:sizeString:'>
<arg declared_type='NSString*' index='0' name='symbolName' type='@'/>
<arg declared_type='NSString*' index='1' name='colorHex' type='@'/>
<arg declared_type='NSString*' index='2' name='sizeString' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUIImage:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUIImage:anchorPoint:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='CGPoint' index='1' name='anchorPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='label'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='replaceUIImage:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='replaceUIImage:anchorPoint:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='CGPoint' index='1' name='anchorPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabel:'>
<arg declared_type='UIView*' index='0' name='label' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='textBackgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextForegroundColor:'>
<arg declared_type='UIColor*' index='0' name='textForegroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showLabel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='textBackgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='textForegroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='toggleLabel'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMMemoryCache'>
<method selector='capacity'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='initWithCapacity:'>
<arg declared_type='NSUInteger' index='0' name='aCapacity' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='makeSpaceInCache'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMPointAnnotation'>
<method selector='image'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setImage:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMPolygonAnnotation'>
<method selector='initWithMapView:points:interiorPolygons:'>
<arg declared_type='RMMapView*' index='0' name='aMapView' type='@'/>
<arg declared_type='NSArray*' index='1' name='points' type='@'/>
<arg declared_type='NSArray*' index='2' name='interiorPolygons' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='interiorPolygons'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RMProjection'>
<method class_method='true' selector='EPSGLatLong'>
<retval declared_type='id' type='@'/>
</method>
<method selector='constrainPointToBounds:'>
<arg declared_type='RMProjectedPoint' index='0' name='aPoint' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='RMProjectedPoint' type='{_RMProjectedPoint=dd}'/>
</method>
<method class_method='true' selector='convertCoordinate:toUTMZoneNumber:utmZoneLetter:isNorthernHemisphere:easting:northing:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='int*' index='1' name='utmZoneNumber' type='^i'/>
<arg declared_type='NSString**' index='2' name='utmZoneLetter' type='^@'/>
<arg declared_type='BOOL*' index='3' name='isNorthernHemisphere' type='^B'/>
<arg declared_type='double*' index='4' name='easting' type='^d'/>
<arg declared_type='double*' index='5' name='northing' type='^d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='convertUTMZoneNumber:utmZoneLetter:isNorthernHemisphere:easting:northing:toCoordinate:'>
<arg declared_type='int' index='0' name='utmZoneNumber' type='i'/>
<arg declared_type='NSString*' index='1' name='utmZoneLetter' type='@'/>
<arg declared_type='BOOL' index='2' name='isNorthernHemisphere' type='B'/>
<arg declared_type='double' index='3' name='easting' type='d'/>
<arg declared_type='double' index='4' name='northing' type='d'/>
<arg declared_type='CLLocationCoordinate2D*' index='5' name='coordinate' type='^{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='coordinateToProjectedPoint:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='aLatLong' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='RMProjectedPoint' type='{_RMProjectedPoint=dd}'/>
</method>
<method class_method='true' selector='googleProjection'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithString:inBounds:'>
<arg declared_type='NSString*' index='0' name='proj4String' type='@'/>
<arg declared_type='RMProjectedRect' index='1' name='projectedBounds' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='internalProjection'>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='planetBounds'>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</method>
<method selector='projectedPointToCoordinate:'>
<arg declared_type='RMProjectedPoint' index='0' name='aPoint' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='CLLocationCoordinate2D' type='{_CLLocationCoordinate2D=dd}'/>
</method>
<method selector='projectionWrapsHorizontally'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setProjectionWrapsHorizontally:'>
<arg declared_type='BOOL' index='0' name='projectionWrapsHorizontally' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='wrapPointHorizontally:'>
<arg declared_type='RMProjectedPoint' index='0' name='aPoint' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='RMProjectedPoint' type='{_RMProjectedPoint=dd}'/>
</method>
</class>
<class name='RMQuadTree'>
<method selector='addAnnotation:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAnnotations:'>
<arg declared_type='NSArray*' index='0' name='annotations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='annotationsInProjectedRect:'>
<arg declared_type='RMProjectedRect' index='0' name='boundingBox' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='annotationsInProjectedRect:createClusterAnnotations:withProjectedClusterSize:andProjectedClusterMarkerSize:findGravityCenter:'>
<arg declared_type='RMProjectedRect' index='0' name='boundingBox' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
<arg declared_type='BOOL' index='1' name='createClusterAnnotations' type='B'/>
<arg declared_type='RMProjectedSize' index='2' name='clusterSize' type='{_RMProjectedSize=dd}'/>
<arg declared_type='RMProjectedSize' index='3' name='clusterMarkerSize' type='{_RMProjectedSize=dd}'/>
<arg declared_type='BOOL' index='4' name='findGravityCenter' type='B'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithMapView:'>
<arg declared_type='RMMapView*' index='0' name='aMapView' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnnotation:'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMQuadTreeNode'>
<method selector='annotations'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='boundingBox'>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</method>
<method selector='clusterAnnotation'>
<retval declared_type='RMAnnotation*' type='@'/>
</method>
<method selector='clusteredAnnotations'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='enclosedAnnotations'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='nodeType'>
<retval declared_type='int' type='i'/>
</method>
<method selector='northEast'>
<retval declared_type='RMQuadTreeNode*' type='@'/>
</method>
<method selector='northEastBoundingBox'>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</method>
<method selector='northWest'>
<retval declared_type='RMQuadTreeNode*' type='@'/>
</method>
<method selector='northWestBoundingBox'>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</method>
<method selector='parentNode'>
<retval declared_type='RMQuadTreeNode*' type='@'/>
</method>
<method selector='setAnnotations:'>
<arg declared_type='NSArray*' index='0' name='annotations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClusterAnnotation:'>
<arg declared_type='RMAnnotation*' index='0' name='clusterAnnotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClusteredAnnotations:'>
<arg declared_type='NSArray*' index='0' name='clusteredAnnotations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnclosedAnnotations:'>
<arg declared_type='NSArray*' index='0' name='enclosedAnnotations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnclusteredAnnotations:'>
<arg declared_type='NSArray*' index='0' name='unclusteredAnnotations' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='southEast'>
<retval declared_type='RMQuadTreeNode*' type='@'/>
</method>
<method selector='southEastBoundingBox'>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</method>
<method selector='southWest'>
<retval declared_type='RMQuadTreeNode*' type='@'/>
</method>
<method selector='southWestBoundingBox'>
<retval declared_type='RMProjectedRect' type='{_RMProjectedRect={_RMProjectedPoint=dd}{_RMProjectedSize=dd}}'/>
</method>
<method selector='unclusteredAnnotations'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RMShape'>
<method selector='addCurveToCoordinate:controlCoordinate1:controlCoordinate2:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationCoordinate2D' index='1' name='controlCoordinate1' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationCoordinate2D' index='2' name='controlCoordinate2' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addCurveToProjectedPoint:controlProjectedPoint1:controlProjectedPoint2:'>
<arg declared_type='RMProjectedPoint' index='0' name='projectedPoint' type='{_RMProjectedPoint=dd}'/>
<arg declared_type='RMProjectedPoint' index='1' name='controlProjectedPoint1' type='{_RMProjectedPoint=dd}'/>
<arg declared_type='RMProjectedPoint' index='2' name='controlProjectedPoint2' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addLineToCoordinate:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addLineToProjectedPoint:'>
<arg declared_type='RMProjectedPoint' index='0' name='projectedPoint' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addLineToScreenPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addQuadCurveToCoordinate:controlCoordinate:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationCoordinate2D' index='1' name='controlCoordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addQuadCurveToProjectedPoint:controlProjectedPoint:'>
<arg declared_type='RMProjectedPoint' index='0' name='projectedPoint' type='{_RMProjectedPoint=dd}'/>
<arg declared_type='RMProjectedPoint' index='1' name='controlProjectedPoint' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='closePath'>
<retval declared_type='void' type='v'/>
</method>
<method selector='enableShadow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fillColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='fillPatternImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='fillRule'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithView:'>
<arg declared_type='RMMapView*' index='0' name='aMapView' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lineCap'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='lineColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='lineDashLengths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='lineDashPhase'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='lineJoin'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='lineWidth'>
<retval declared_type='float' type='f'/>
</method>
<method selector='moveToCoordinate:'>
<arg declared_type='CLLocationCoordinate2D' index='0' name='coordinate' type='{_CLLocationCoordinate2D=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToProjectedPoint:'>
<arg declared_type='RMProjectedPoint' index='0' name='projectedPoint' type='{_RMProjectedPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToScreenPoint:'>
<arg declared_type='CGPoint' index='0' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pathBoundingBox'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
</method>
<method selector='performBatchOperations:'>
<arg declared_type='void (^)(RMShape *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='RMShape*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='scaleLineDash'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scaleLineWidth'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnableShadow:'>
<arg declared_type='BOOL' index='0' name='enableShadow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillColor:'>
<arg declared_type='UIColor*' index='0' name='fillColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillPatternImage:'>
<arg declared_type='UIImage*' index='0' name='fillPatternImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFillRule:'>
<arg declared_type='NSString*' index='0' name='fillRule' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineCap:'>
<arg declared_type='NSString*' index='0' name='lineCap' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineColor:'>
<arg declared_type='UIColor*' index='0' name='lineColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineDashLengths:'>
<arg declared_type='NSArray*' index='0' name='lineDashLengths' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineDashPhase:'>
<arg declared_type='CGFloat' index='0' name='lineDashPhase' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineJoin:'>
<arg declared_type='NSString*' index='0' name='lineJoin' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidth:'>
<arg declared_type='float' index='0' name='lineWidth' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleLineDash:'>
<arg declared_type='BOOL' index='0' name='scaleLineDash' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleLineWidth:'>
<arg declared_type='BOOL' index='0' name='scaleLineWidth' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowBlur:'>
<arg declared_type='CGFloat' index='0' name='shadowBlur' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowOffset:'>
<arg declared_type='CGSize' index='0' name='shadowOffset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowBlur'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='shadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}' type64='{CGSize=dd}'/>
</method>
</class>
<class name='RMShapeAnnotation'>
<method selector='fillColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='initWithMapView:points:'>
<arg declared_type='RMMapView*' index='0' name='aMapView' type='@'/>
<arg declared_type='NSArray*' index='1' name='points' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lineColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='lineWidth'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='points'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setFillColor:'>
<arg declared_type='UIColor*' index='0' name='fillColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineColor:'>
<arg declared_type='UIColor*' index='0' name='lineColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidth:'>
<arg declared_type='CGFloat' index='0' name='lineWidth' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMStaticMapView'>
<method selector='initWithFrame:mapID:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSString*' index='1' name='mapID' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:mapID:centerCoordinate:zoomLevel:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSString*' index='1' name='mapID' type='@'/>
<arg declared_type='CLLocationCoordinate2D' index='2' name='centerCoordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CGFloat' index='3' name='zoomLevel' type='f' type64='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:mapID:centerCoordinate:zoomLevel:completionHandler:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSString*' index='1' name='mapID' type='@'/>
<arg declared_type='CLLocationCoordinate2D' index='2' name='centerCoordinate' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CGFloat' index='3' name='zoomLevel' type='f' type64='d'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='4' name='handler' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrame:mapID:completionHandler:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='NSString*' index='1' name='mapID' type='@'/>
<arg declared_type='void (^)(UIImage *)' function_pointer='true' index='2' name='handler' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RMTileCache'>
<method selector='addCache:'>
<arg declared_type='id' index='0' name='cache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='backgroundCacheDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='beginBackgroundCacheForTileSource:southWest:northEast:minZoom:maxZoom:'>
<arg declared_type='id' index='0' name='tileSource' type='@'/>
<arg declared_type='CLLocationCoordinate2D' index='1' name='southWest' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='CLLocationCoordinate2D' index='2' name='northEast' type='{_CLLocationCoordinate2D=dd}'/>
<arg declared_type='float' index='3' name='minZoom' type='f'/>
<arg declared_type='float' index='4' name='maxZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelBackgroundCache'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didReceiveMemoryWarning'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithExpiryPeriod:'>
<arg declared_type='NSTimeInterval' index='0' name='period' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertCache:atIndex:'>
<arg declared_type='id' index='0' name='cache' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isBackgroundCaching'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBackgroundCacheDelegate:'>
<arg declared_type='id' index='0' name='backgroundCacheDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileCaches'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='tileHash:'>
<arg declared_type='RMTile' index='0' name='tile' type='{_RMTile=IIs}'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
</class>
<class name='RMTileCacheDownloadOperation'>
<method selector='initWithTile:forTileSource:usingCache:'>
<arg declared_type='RMTile' index='0' name='tile' type='{_RMTile=IIs}'/>
<arg declared_type='id' index='1' name='source' type='@'/>
<arg declared_type='RMTileCache*' index='2' name='cache' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RMTileImage'>
<method class_method='true' selector='errorTile'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method class_method='true' selector='missingTile'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method class_method='true' selector='setErrorTile:'>
<arg declared_type='UIImage*' index='0' name='newErrorTile' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setMissingTile:'>
<arg declared_type='UIImage*' index='0' name='newMissingTile' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='RMTileMillSource'>
<method selector='initWithHost:mapName:tileCacheKey:minZoom:maxZoom:'>
<arg declared_type='NSString*' index='0' name='host' type='@'/>
<arg declared_type='NSString*' index='1' name='mapName' type='@'/>
<arg declared_type='NSString*' index='2' name='tileCacheKey' type='@'/>
<arg declared_type='float' index='3' name='minZoom' type='f'/>
<arg declared_type='float' index='4' name='maxZoom' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMapName:tileCacheKey:minZoom:maxZoom:'>
<arg declared_type='NSString*' index='0' name='mapName' type='@'/>
<arg declared_type='NSString*' index='1' name='tileCacheKey' type='@'/>
<arg declared_type='float' index='2' name='minZoom' type='f'/>
<arg declared_type='float' index='3' name='maxZoom' type='f'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RMTileSourcesContainer'>
<method selector='addTileSource:'>
<arg declared_type='id' index='0' name='tileSource' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addTileSource:atIndex:'>
<arg declared_type='id' index='0' name='tileSource' type='@'/>
<arg declared_type='NSUInteger' index='1' name='index' type='I' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cancelAllDownloads'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didReceiveMemoryWarning'>
<retval declared_type='void' type='v'/>
</method>
<method selector='latitudeLongitudeBoundingBox'>
<retval declared_type='RMSphericalTrapezium' type='{_RMSphericalTrapezium={?=dd}{?=dd}}'/>
</method>
<method selector='maxZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='mercatorToTileProjection'>
<retval declared_type='RMFractalTileProjection*' type='@'/>
</method>
<method selector='minZoom'>
<retval declared_type='float' type='f'/>
</method>
<method selector='moveTileSourceAtIndex:toIndex:'>
<arg declared_type='NSUInteger' index='0' name='fromIndex' type='I' type64='Q'/>
<arg declared_type='NSUInteger' index='1' name='toIndex' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='projection'>
<retval declared_type='RMProjection*' type='@'/>
</method>
<method selector='removeAllTileSources'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTileSource:'>
<arg declared_type='id' index='0' name='tileSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeTileSourceAtIndex:'>
<arg declared_type='NSUInteger' index='0' name='index' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxZoom:'>
<arg declared_type='float' index='0' name='maxZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMercatorToTileProjection:'>
<arg declared_type='RMFractalTileProjection*' index='0' name='mercatorToTileProjection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinZoom:'>
<arg declared_type='float' index='0' name='minZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProjection:'>
<arg declared_type='RMProjection*' index='0' name='projection' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileSource:'>
<arg declared_type='id' index='0' name='tileSource' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setTileSources:'>
<arg declared_type='NSArray*' index='0' name='tileSources' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tileSideLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='tileSourceForUniqueTilecacheKey:'>
<arg declared_type='NSString*' index='0' name='uniqueTilecacheKey' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='tileSources'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='RMUserLocation'>
<method selector='heading'>
<retval declared_type='CLHeading*' type='@'/>
</method>
<method selector='isUpdating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='location'>
<retval declared_type='CLLocation*' type='@'/>
</method>
</class>
<class name='RMUserTrackingBarButtonItem'>
<method selector='initWithMapView:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mapView'>
<retval declared_type='RMMapView*' type='@'/>
</method>
<method selector='setMapView:'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SMCalloutBackgroundView'>
<method selector='arrowPoint'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='setArrowPoint:'>
<arg declared_type='CGPoint' index='0' name='arrowPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='systemBackgroundView'>
<retval declared_type='SMCalloutBackgroundView*' type='@'/>
</method>
</class>
<class name='SMCalloutImageBackgroundView'>
<method selector='backgroundImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='bottomAnchorImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='leftCapImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='rightCapImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setBackgroundImage:'>
<arg declared_type='UIImage*' index='0' name='backgroundImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBottomAnchorImage:'>
<arg declared_type='UIImage*' index='0' name='bottomAnchorImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftCapImage:'>
<arg declared_type='UIImage*' index='0' name='leftCapImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightCapImage:'>
<arg declared_type='UIImage*' index='0' name='rightCapImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopAnchorImage:'>
<arg declared_type='UIImage*' index='0' name='topAnchorImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='topAnchorImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
</class>
<class name='SMCalloutView'>
<method selector='backgroundView'>
<retval declared_type='SMCalloutBackgroundView*' type='@'/>
</method>
<method selector='calloutOffset'>
<retval declared_type='CGPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
</method>
<method selector='contentView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='currentArrowDirection'>
<retval declared_type='SMCalloutArrowDirection' type='I' type64='Q'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dismissAnimation'>
<retval declared_type='SMCalloutAnimation' type='i' type64='q'/>
</method>
<method selector='dismissCalloutAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='leftAccessoryView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='presentAnimation'>
<retval declared_type='SMCalloutAnimation' type='i' type64='q'/>
</method>
<method selector='presentCalloutFromRect:inLayer:constrainedToLayer:permittedArrowDirections:animated:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='CALayer*' index='1' name='layer' type='@'/>
<arg declared_type='CALayer*' index='2' name='constrainedLayer' type='@'/>
<arg declared_type='SMCalloutArrowDirection' index='3' name='arrowDirections' type='I' type64='Q'/>
<arg declared_type='BOOL' index='4' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='presentCalloutFromRect:inView:constrainedToView:permittedArrowDirections:animated:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}'/>
<arg declared_type='UIView*' index='1' name='view' type='@'/>
<arg declared_type='UIView*' index='2' name='constrainedView' type='@'/>
<arg declared_type='SMCalloutArrowDirection' index='3' name='arrowDirections' type='I' type64='Q'/>
<arg declared_type='BOOL' index='4' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rightAccessoryView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='SMCalloutBackgroundView*' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCalloutOffset:'>
<arg declared_type='CGPoint' index='0' name='calloutOffset' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentView:'>
<arg declared_type='UIView*' index='0' name='contentView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDismissAnimation:'>
<arg declared_type='SMCalloutAnimation' index='0' name='dismissAnimation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftAccessoryView:'>
<arg declared_type='UIView*' index='0' name='leftAccessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPresentAnimation:'>
<arg declared_type='SMCalloutAnimation' index='0' name='presentAnimation' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightAccessoryView:'>
<arg declared_type='UIView*' index='0' name='rightAccessoryView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitle:'>
<arg declared_type='NSString*' index='0' name='subtitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleView:'>
<arg declared_type='UIView*' index='0' name='subtitleView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleView:'>
<arg declared_type='UIView*' index='0' name='titleView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='subtitleView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='titleView'>
<retval declared_type='UIView*' type='@'/>
</method>
</class>
<informal_protocol name='FMDatabasePoolDelegate'>
<method selector='databasePool:shouldAddDatabaseToPool:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='FMDatabasePool*' index='0' name='pool' type='@'/>
<arg declared_type='FMDatabase*' index='1' name='database' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='GRMustacheFilter'>
<method selector='transformedValue:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='GRMustacheSectionHelper'>
<method selector='renderSection:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='GRMustacheSection*' index='0' name='section' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='GRMustacheSectionTagHelper'>
<method selector='renderForSectionTagInContext:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='GRMustacheSectionTagRenderingContext*' index='0' name='context' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='GRMustacheTemplateDelegate'>
<method selector='template:didInterpretReturnValueOfInvocation:as:' type='v20@0:4@8@12i16' type64='v36@0:8@16@24i32'>
<arg declared_type='GRMustacheTemplate*' index='0' name='template' type='@'/>
<arg declared_type='GRMustacheInvocation*' index='1' name='invocation' type='@'/>
<arg declared_type='GRMustacheInterpretation' index='2' name='interpretation' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='template:willInterpretReturnValueOfInvocation:as:' type='v20@0:4@8@12i16' type64='v36@0:8@16@24i32'>
<arg declared_type='GRMustacheTemplate*' index='0' name='template' type='@'/>
<arg declared_type='GRMustacheInvocation*' index='1' name='invocation' type='@'/>
<arg declared_type='GRMustacheInterpretation' index='2' name='interpretation' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='templateDidRender:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='GRMustacheTemplate*' index='0' name='template' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='templateWillRender:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='GRMustacheTemplate*' index='0' name='template' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='GRMustacheTemplateRepositoryDataSource'>
<method selector='templateRepository:templateIDForName:relativeToTemplateID:' type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32'>
<arg declared_type='GRMustacheTemplateRepository*' index='0' name='templateRepository' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='id' index='2' name='baseTemplateID' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='templateRepository:templateStringForTemplateID:error:' type='@20@0:4@8@12^@16' type64='@40@0:8@16@24^@32'>
<arg declared_type='GRMustacheTemplateRepository*' index='0' name='templateRepository' type='@'/>
<arg declared_type='id' index='1' name='templateID' type='@'/>
<arg declared_type='NSError**' index='2' name='outError' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='GRMustacheVariableHelper'>
<method selector='renderVariable:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='GRMustacheVariable*' index='0' name='variable' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='GRMustacheVariableTagHelper'>
<method selector='renderForVariableTagInContext:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='GRMustacheVariableTagRenderingContext*' index='0' name='context' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='JRSwizzle'>
<method class_method='true' selector='jr_swizzleClassMethod:withClassMethod:error:' type='B20@0:4:8:12^@16' type64='B40@0:8:16:24^@32'>
<arg declared_type='SEL' index='0' name='origSel_' type=':'/>
<arg declared_type='SEL' index='1' name='altSel_' type=':'/>
<arg declared_type='NSError**' index='2' name='error_' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='jr_swizzleMethod:withMethod:error:' type='B20@0:4:8:12^@16' type64='B40@0:8:16:24^@32'>
<arg declared_type='SEL' index='0' name='origSel_' type=':'/>
<arg declared_type='SEL' index='1' name='altSel_' type=':'/>
<arg declared_type='NSError**' index='2' name='error_' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='RMInteractiveMapView'>
<method selector='formattedOutputOfType:forPoint:' type='@20@0:4@8{CGPoint=ff}12' type64='@40@0:8@16{CGPoint=dd}24'>
<arg declared_type='id' index='0' name='outputType' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='supportsInteractivity' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='RMInteractiveSource'>
<method selector='formattedOutputOfType:forPoint:inMapView:' type='@24@0:4@8{CGPoint=ff}12@20' type64='@48@0:8@16{CGPoint=dd}24@40'>
<arg declared_type='id' index='0' name='outputType' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='RMMapView*' index='2' name='mapView' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='supportsInteractivity' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='RMMapScrollViewDelegate'>
<method selector='scrollView:correctedContentOffset:' type='v16@0:4@8N^{CGPoint=ff}12' type64='v32@0:8@16N^{CGPoint=dd}24'>
<arg declared_type='RMMapScrollView*' index='0' name='aScrollView' type='@'/>
<arg declared_type='CGPoint*' index='1' name='aContentOffset' type='^{CGPoint=ff}' type64='^{CGPoint=dd}' type_modifier='N'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scrollView:correctedContentSize:' type='v16@0:4@8N^{CGSize=ff}12' type64='v32@0:8@16N^{CGSize=dd}24'>
<arg declared_type='RMMapScrollView*' index='0' name='aScrollView' type='@'/>
<arg declared_type='CGSize*' index='1' name='aContentSize' type='^{CGSize=ff}' type64='^{CGSize=dd}' type_modifier='N'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RMMapViewDelegate'>
<method selector='afterMapMove:byUser:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='BOOL' index='1' name='wasUserAction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='afterMapZoom:byUser:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='BOOL' index='1' name='wasUserAction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beforeMapMove:byUser:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='BOOL' index='1' name='wasUserAction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beforeMapZoom:byUser:' type='v16@0:4@8B12' type64='v28@0:8@16B24'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='BOOL' index='1' name='wasUserAction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doubleTapOnAnnotation:onMap:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<arg declared_type='RMMapView*' index='1' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doubleTapOnLabelForAnnotation:onMap:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<arg declared_type='RMMapView*' index='1' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doubleTapOnMap:at:' type='v20@0:4@8{CGPoint=ff}12' type64='v40@0:8@16{CGPoint=dd}24'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='longPressOnAnnotation:onMap:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<arg declared_type='RMMapView*' index='1' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='longPressOnMap:at:' type='v20@0:4@8{CGPoint=ff}12' type64='v40@0:8@16{CGPoint=dd}24'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:annotation:didChangeDragState:fromOldState:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<arg declared_type='id' index='2' name='newState' type='@'/>
<arg declared_type='id' index='3' name='oldState' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didChangeUserTrackingMode:animated:' type='v20@0:4@8@12B16' type64='v36@0:8@16@24B32'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='id' index='1' name='mode' type='@'/>
<arg declared_type='BOOL' index='2' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didDeselectAnnotation:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didFailToLocateUserWithError:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='NSError*' index='1' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didHideLayerForAnnotation:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didSelectAnnotation:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:didUpdateUserLocation:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMUserLocation*' index='1' name='userLocation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapView:layerForAnnotation:' type='@16@0:4@8@12' type64='@32@0:8@16@24'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<retval declared_type='RMMapLayer*' type='@'/>
</method>
<method selector='mapView:shouldDragAnnotation:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='mapView:willHideLayerForAnnotation:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapViewDidStopLocatingUser:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapViewRegionDidChange:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mapViewWillStartLocatingUser:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='RMMapView*' index='0' name='mapView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='singleTapOnMap:at:' type='v20@0:4@8{CGPoint=ff}12' type64='v40@0:8@16{CGPoint=dd}24'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='singleTapTwoFingersOnMap:at:' type='v20@0:4@8{CGPoint=ff}12' type64='v40@0:8@16{CGPoint=dd}24'>
<arg declared_type='RMMapView*' index='0' name='map' type='@'/>
<arg declared_type='CGPoint' index='1' name='point' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tapOnAnnotation:onMap:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<arg declared_type='RMMapView*' index='1' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tapOnCalloutAccessoryControl:forAnnotation:onMap:' type='v20@0:4@8@12@16' type64='v40@0:8@16@24@32'>
<arg declared_type='UIControl*' index='0' name='control' type='@'/>
<arg declared_type='RMAnnotation*' index='1' name='annotation' type='@'/>
<arg declared_type='RMMapView*' index='2' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tapOnLabelForAnnotation:onMap:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='RMAnnotation*' index='0' name='annotation' type='@'/>
<arg declared_type='RMMapView*' index='1' name='map' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RMTileCache'>
<method selector='addImage:forTile:withCacheKey:' type='v28@0:4@8{?=IIs}12@24' type64='v44@0:8@16{?=IIs}24@36'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='RMTile' index='1' name='tile' type='{_RMTile=IIs}'/>
<arg declared_type='NSString*' index='2' name='cacheKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cachedImage:withCacheKey:' type='@24@0:4{?=IIs}8@20' type64='@36@0:8{?=IIs}16@28'>
<arg declared_type='RMTile' index='0' name='tile' type='{_RMTile=IIs}'/>
<arg declared_type='NSString*' index='1' name='cacheKey' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='didReceiveMemoryWarning' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllCachedImages' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAllCachedImagesForCacheKey:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='NSString*' index='0' name='cacheKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RMTileCacheBackgroundDelegate'>
<method selector='tileCache:didBackgroundCacheTile:withIndex:ofTotalTileCount:' type='v32@0:4@8{?=IIs}12i24i28' type64='v44@0:8@16{?=IIs}24i36i40'>
<arg declared_type='RMTileCache*' index='0' name='tileCache' type='@'/>
<arg declared_type='RMTile' index='1' name='tile' type='{_RMTile=IIs}'/>
<arg declared_type='int' index='2' name='tileIndex' type='i'/>
<arg declared_type='int' index='3' name='totalTileCount' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileCache:didBeginBackgroundCacheWithCount:forTileSource:' type='v20@0:4@8i12@16' type64='v36@0:8@16i24@28'>
<arg declared_type='RMTileCache*' index='0' name='tileCache' type='@'/>
<arg declared_type='int' index='1' name='tileCount' type='i'/>
<arg declared_type='id' index='2' name='tileSource' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileCacheDidCancelBackgroundCache:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='RMTileCache*' index='0' name='tileCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileCacheDidFinishBackgroundCache:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='RMTileCache*' index='0' name='tileCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='RMTileSource'>
<method selector='cancelAllDownloads' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didReceiveMemoryWarning' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageForTile:inCache:' type='@24@0:4{?=IIs}8@20' type64='@36@0:8{?=IIs}16@28'>
<arg declared_type='RMTile' index='0' name='tile' type='{_RMTile=IIs}'/>
<arg declared_type='RMTileCache*' index='1' name='tileCache' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='isCacheable' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOpaque' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='latitudeLongitudeBoundingBox' type='{?={?=dd}{?=dd}}8@0:4' type64='{?={?=dd}{?=dd}}16@0:8'>
<retval declared_type='RMSphericalTrapezium' type='{_RMSphericalTrapezium={?=dd}{?=dd}}'/>
</method>
<method selector='longAttribution' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='longDescription' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='maxZoom' type='f8@0:4' type64='f16@0:8'>
<retval declared_type='float' type='f'/>
</method>
<method selector='mercatorToTileProjection' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='RMFractalTileProjection*' type='@'/>
</method>
<method selector='minZoom' type='f8@0:4' type64='f16@0:8'>
<retval declared_type='float' type='f'/>
</method>
<method selector='projection' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='RMProjection*' type='@'/>
</method>
<method selector='setCacheable:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='cacheable' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxZoom:' type='v12@0:4f8' type64='v20@0:8f16'>
<arg declared_type='float' index='0' name='maxZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinZoom:' type='v12@0:4f8' type64='v20@0:8f16'>
<arg declared_type='float' index='0' name='minZoom' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpaque:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='opaque' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shortAttribution' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='shortName' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='tileSideLength' type='I8@0:4' type64='Q16@0:8'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='tileSourceHasTile:' type='B20@0:4{?=IIs}8' type64='B28@0:8{?=IIs}16'>
<arg declared_type='RMTile' index='0' name='tile' type='{_RMTile=IIs}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='uniqueTilecacheKey' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='SMCalloutViewDelegate'>
<method selector='calloutView:delayForRepositionWithSize:' type='d20@0:4@8{CGSize=ff}12' type64='d40@0:8@16{CGSize=dd}24'>
<arg declared_type='SMCalloutView*' index='0' name='calloutView' type='@'/>
<arg declared_type='CGSize' index='1' name='offset' type='{CGSize=ff}' type64='{CGSize=dd}'/>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='calloutViewDidAppear:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='SMCalloutView*' index='0' name='calloutView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='calloutViewDidDisappear:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='SMCalloutView*' index='0' name='calloutView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
